{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuga\\\\Documents\\\\GitU\\\\IIMAS\\\\iimas_auth_frontend\\\\src\\\\pages\\\\register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, Fragment, useEffect, useState } from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport { loadModels, getFullFaceDescription, createMatcher, isFaceDetectionModelLoaded } from '../../components/api/face';\nimport DrawBox from '../../components/api/DrawBox';\nimport ShowDescriptors from '../../components/api/showDescriptors';\nimport { JSON_PROFILE } from '../../components/api/profile';\nimport testImg from '../../components/api/img/test.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaxWidth = 600;\nconst boxColor = '#BE80B5';\nconst INIT_STATE = {\n  url: '',\n  imageURL: '',\n  fullDesc: null,\n  imageDimension: null,\n  error: false,\n  loading: false\n};\n\nconst Register = ({\n  t\n}) => {\n  _s();\n\n  const [state, setState] = useState({ ...INIT_STATE,\n    faceMatcher: null,\n    showDescriptors: false,\n    WIDTH: null,\n    HEIGHT: 0,\n    isModelLoaded: !!isFaceDetectionModelLoaded()\n  });\n  useEffect(() => {\n    // componentWillMount\n    resetState();\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    this.setState({\n      WIDTH: _W\n    });\n    this.mounting();\n  }, []);\n\n  const mounting = async () => {\n    await loadModels();\n    await this.matcher();\n    await getImageDimension(testImg);\n    await setState({ ...state,\n      imageURL: testImg,\n      loading: true\n    });\n    await handleImageChange(testImg);\n  };\n\n  const matcher = async () => {\n    const faceMatcher = await createMatcher(JSON_PROFILE);\n    setState({ ...state,\n      faceMatcher: faceMatcher\n    });\n  };\n\n  const handleFileChange = async event => {\n    resetState(); // await\n\n    setState({ ...state,\n      imageURL: URL.createObjectURL(event.target.files[0]),\n      loading: true\n    });\n    handleImageChange();\n  };\n\n  const handleURLChange = event => {\n    setState({ ...state,\n      url: event.target.value\n    });\n  };\n\n  const handleButtonClick = async () => {\n    resetState();\n    let blob = await fetch(this.state.url).then(r => r.blob()).catch(error => setState({ ...state,\n      error\n    }));\n\n    if (!!blob && blob.type.includes('image')) {\n      setState({ ...state,\n        imageURL: URL.createObjectURL(blob),\n        loading: true\n      });\n      handleImageChange();\n    }\n  };\n\n  const handleImageChange = async (image = this.state.imageURL) => {\n    await getImageDimension(image);\n    await getFullFaceDescription(image).then(fullDesc => {\n      this.setState({\n        fullDesc,\n        loading: false\n      });\n    });\n  };\n\n  const getImageDimension = imageURL => {\n    let img = new Image();\n\n    img.onload = () => {\n      let HEIGHT = this.state.WIDTH * img.height / img.width;\n      this.setState({\n        HEIGHT,\n        imageDimension: {\n          width: img.width,\n          height: img.height\n        }\n      });\n    };\n\n    img.src = imageURL;\n  };\n\n  const handleDescriptorsCheck = event => {\n    this.setState({\n      showDescriptors: event.target.checked\n    });\n  };\n\n  const resetState = () => {\n    this.setState({ ...INIT_STATE\n    });\n  }; // Display working status\n\n\n  let status = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Status: Model Loaded = \", isModelLoaded.toString()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 26\n  }, this);\n\n  if (!!error && error.toString() === 'TypeError: Failed to fetch') {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Status: Error Failed to fetch Image URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }, this);\n  } else if (loading) {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'blue'\n      },\n      children: \"Status: LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 26\n    }, this);\n  } else if (!!fullDesc && !!imageURL && !loading) {\n    if (fullDesc.length < 2) status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", fullDesc.length, \" Face Detect\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 30\n    }, this);\n    if (fullDesc.length > 1) status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", fullDesc.length, \" Faces Detect\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 30\n    }, this);\n  } // Loading Spinner\n\n\n  const spinner = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 0,\n      color: '#BE80B5',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%,-50%)',\n      textShadow: '2px 2px 3px #fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 17\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [status, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: WIDTH,\n        height: HEIGHT\n      },\n      children: [!!imageURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: WIDTH\n            },\n            src: imageURL,\n            alt: \"imageURL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 33\n        }, this), !!fullDesc ? /*#__PURE__*/_jsxDEV(DrawBox, {\n          fullDesc: fullDesc,\n          faceMatcher: faceMatcher,\n          imageWidth: WIDTH,\n          boxColor: boxColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 37\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }, this) : null, loading ? spinner : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: WIDTH,\n        padding: 10,\n        border: 'solid',\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"VERIFICA TU IDENTIDAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"myFileUpload\",\n        type: \"file\",\n        onChange: this.handleFileChange,\n        accept: \".jpg, .jpeg, .png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"descriptors\",\n          type: \"checkbox\",\n          checked: this.state.showDescriptors,\n          onChange: () => handleDescriptorsCheck()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Show Descriptors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }, this), !!showDescriptors ? /*#__PURE__*/_jsxDEV(ShowDescriptors, {\n        fullDesc: fullDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 46\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 17\n  }, this);\n};\n\n_s(Register, \"Aho8NvSpa82fGLjBcD4u9tYI9zk=\");\n\n_c = Register;\nexport default withNamespaces()(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/pages/register/Register.js"],"names":["React","Component","Fragment","useEffect","useState","withNamespaces","loadModels","getFullFaceDescription","createMatcher","isFaceDetectionModelLoaded","DrawBox","ShowDescriptors","JSON_PROFILE","testImg","MaxWidth","boxColor","INIT_STATE","url","imageURL","fullDesc","imageDimension","error","loading","Register","t","state","setState","faceMatcher","showDescriptors","WIDTH","HEIGHT","isModelLoaded","resetState","_W","document","documentElement","clientWidth","mounting","matcher","getImageDimension","handleImageChange","handleFileChange","event","URL","createObjectURL","target","files","handleURLChange","value","handleButtonClick","blob","fetch","then","r","catch","type","includes","image","img","Image","onload","height","width","src","handleDescriptorsCheck","checked","status","toString","color","length","spinner","margin","position","top","left","transform","textShadow","display","flexDirection","alignItems","padding","border","marginTop"],"mappings":"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","sourcesContent":["import React, {Component, Fragment, useEffect, useState} from 'react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport {\r\n    loadModels,\r\n    getFullFaceDescription,\r\n    createMatcher,\r\n    isFaceDetectionModelLoaded\r\n} from '../../components/api/face';\r\nimport DrawBox from '../../components/api/DrawBox';\r\nimport ShowDescriptors from '../../components/api/showDescriptors';\r\nimport { JSON_PROFILE } from '../../components/api/profile';\r\nimport testImg from '../../components/api/img/test.png';\r\n\r\nconst MaxWidth = 600;\r\nconst boxColor = '#BE80B5';\r\n\r\nconst INIT_STATE = {\r\n    url: '',\r\n    imageURL: '',\r\n    fullDesc: null,\r\n    imageDimension: null,\r\n    error: false,\r\n    loading: false\r\n};\r\n\r\nconst Register = ({t})=>{\r\n\r\n    const [state, setState] = useState({\r\n        ...INIT_STATE,\r\n        faceMatcher: null,\r\n        showDescriptors: false,\r\n        WIDTH: null,\r\n        HEIGHT: 0,\r\n        isModelLoaded: !!isFaceDetectionModelLoaded()\r\n    });\r\n\r\n    useEffect(()=>{\r\n        // componentWillMount\r\n        resetState();\r\n        let _W = document.documentElement.clientWidth;\r\n        if (_W > MaxWidth) _W = MaxWidth;\r\n        this.setState({ WIDTH: _W });\r\n        this.mounting();\r\n\r\n    }, [])\r\n\r\n        const mounting = async () => {\r\n            await loadModels();\r\n            await this.matcher();\r\n            await getImageDimension(testImg);\r\n            await setState({...state,  imageURL: testImg, loading: true });\r\n            await handleImageChange(testImg);\r\n        };\r\n\r\n        const matcher = async () => {\r\n            const faceMatcher = await createMatcher(JSON_PROFILE);\r\n            setState({ ...state, faceMatcher: faceMatcher });\r\n        };\r\n\r\n        const handleFileChange = async event => {\r\n            resetState();\r\n            // await\r\n            setState({...state,\r\n                imageURL: URL.createObjectURL(event.target.files[0]),\r\n                loading: true\r\n            });\r\n             handleImageChange();\r\n        };\r\n\r\n        const handleURLChange = event => {\r\n            setState({ ...state, url: event.target.value });\r\n        };\r\n\r\n        const handleButtonClick = async () => {\r\n            resetState();\r\n            let blob = await fetch(this.state.url)\r\n                .then(r => r.blob())\r\n                .catch(error => setState({ ...state, error }));\r\n            if (!!blob && blob.type.includes('image')) {\r\n                setState({...state,\r\n                    imageURL: URL.createObjectURL(blob),\r\n                    loading: true\r\n                });\r\n                handleImageChange();\r\n            }\r\n        };\r\n\r\n        const handleImageChange = async (image = this.state.imageURL) => {\r\n            await getImageDimension(image);\r\n            await getFullFaceDescription(image).then(fullDesc => {\r\n                this.setState({ fullDesc, loading: false });\r\n            });\r\n        };\r\n\r\n        const getImageDimension = imageURL => {\r\n            let img = new Image();\r\n            img.onload = () => {\r\n                let HEIGHT = (this.state.WIDTH * img.height) / img.width;\r\n                this.setState({\r\n                    HEIGHT,\r\n                    imageDimension: {\r\n                        width: img.width,\r\n                        height: img.height\r\n                    }\r\n                });\r\n            };\r\n            img.src = imageURL;\r\n        };\r\n\r\n        const handleDescriptorsCheck = event => {\r\n            this.setState({ showDescriptors: event.target.checked });\r\n        };\r\n\r\n        const resetState = () => {\r\n            this.setState({ ...INIT_STATE });\r\n        };\r\n\r\n\r\n\r\n\r\n            // Display working status\r\n            let status = <p>Status: Model Loaded = {isModelLoaded.toString()}</p>;\r\n            if (!!error && error.toString() === 'TypeError: Failed to fetch') {\r\n                status = (\r\n                    <p style={{ color: 'red' }}>Status: Error Failed to fetch Image URL</p>\r\n                );\r\n            } else if (loading) {\r\n                status = <p style={{ color: 'blue' }}>Status: LOADING...</p>;\r\n            } else if (!!fullDesc && !!imageURL && !loading) {\r\n                if (fullDesc.length < 2)\r\n                    status = <p>Status: {fullDesc.length} Face Detect</p>;\r\n                if (fullDesc.length > 1)\r\n                    status = <p>Status: {fullDesc.length} Faces Detect</p>;\r\n            }\r\n\r\n            // Loading Spinner\r\n            const spinner = (\r\n                <div\r\n                    style={{\r\n                        margin: 0,\r\n                        color: '#BE80B5',\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%,-50%)',\r\n                        textShadow: '2px 2px 3px #fff'\r\n                    }}\r\n                >\r\n                    <div className=\"loading\" />\r\n                    <h3>Processing...</h3>\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    {status}\r\n                    <div\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: WIDTH,\r\n                            height: HEIGHT\r\n                        }}\r\n                    >\r\n                        {!!imageURL ? (\r\n                            <div\r\n                                style={{\r\n                                    position: 'relative'\r\n                                }}\r\n                            >\r\n                                <div style={{ position: 'absolute' }}>\r\n                                    <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\r\n                                </div>\r\n                                {!!fullDesc ? (\r\n                                    <DrawBox\r\n                                        fullDesc={fullDesc}\r\n                                        faceMatcher={faceMatcher}\r\n                                        imageWidth={WIDTH}\r\n                                        boxColor={boxColor}\r\n                                    />\r\n                                ) : null}\r\n                            </div>\r\n                        ) : null}\r\n                        {loading ? spinner : null}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: WIDTH,\r\n                            padding: 10,\r\n                            border: 'solid',\r\n                            marginTop: 10\r\n                        }}\r\n                    >\r\n                        <p>VERIFICA TU IDENTIDAD</p>\r\n                        <input\r\n                            id=\"myFileUpload\"\r\n                            type=\"file\"\r\n                            onChange={this.handleFileChange}\r\n                            accept=\".jpg, .jpeg, .png\"\r\n                        />\r\n                        <br />\r\n                        {/*  <div className=\"URLInput\">\r\n            <input\r\n              type=\"url\"\r\n              name=\"url\"\r\n              id=\"url\"\r\n              placeholder=\"Place your photo URL here (only .jpg, .jpeg, .png)\"\r\n              pattern=\"https://.*\"\r\n              size=\"30\"\r\n              onChange={this.handleURLChange}\r\n            />\r\n            <button onClick={this.handleButtonClick}>Upload</button>\r\n          </div>*/}\r\n                        <div>\r\n                            <input\r\n                                name=\"descriptors\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.showDescriptors}\r\n                                onChange={()=>handleDescriptorsCheck()}\r\n                            />\r\n                            <label>Show Descriptors</label>\r\n                        </div>\r\n                        {!!showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n    }\r\n\r\n\r\nexport default withNamespaces()(Register);\r\n"]},"metadata":{},"sourceType":"module"}