{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuga\\\\Documents\\\\GitU\\\\IIMAS\\\\iimas_auth_frontend\\\\src\\\\pages\\\\register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport { loadModels, getFullFaceDescription, createMatcher, isFaceDetectionModelLoaded } from '../../components/api/face';\nimport DrawBox from '../../components/api/DrawBox';\nimport ShowDescriptors from '../../components/api/showDescriptors';\nimport * as JSON_PROFILE from '../../components/api/descriptor.json';\nimport testImg from '../../components/api/img/test.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaxWidth = 600;\nconst boxColor = '#BE80B5';\nconst INIT_STATE = {\n  url: '',\n  imageURL: '',\n  fullDesc: [],\n  imageDimension: {\n    width: 300,\n    height: 100\n  },\n  error: false,\n  loading: false\n};\n\nconst Register = () => {\n  _s();\n\n  const [stateFaceMatcher, setFaceMatcher] = useState(null);\n  const [state, setState] = useState({ ...INIT_STATE,\n    showDescriptors: false,\n    WIDTH: 300,\n    HEIGHT: 100,\n    isModelLoaded: !!isFaceDetectionModelLoaded()\n  });\n\n  const mounting = async () => {\n    await loadModels();\n    await matcher();\n    await getImageDimension(testImg);\n    await setState({ ...state,\n      imageURL: testImg,\n      loading: true\n    });\n    await handleImageChange(testImg);\n  };\n\n  const matcher = async () => {\n    const faceMatcher = await createMatcher(JSON_PROFILE);\n    setFaceMatcher({\n      faceMatcher\n    });\n  };\n\n  const handleURLChange = event => {\n    setState({ ...state,\n      url: event.target.value\n    });\n  };\n\n  const handleButtonClick = async () => {\n    resetState();\n    let blob = await fetch(state.url).then(r => r.blob()).catch(error => setState({ ...state,\n      error\n    }));\n\n    if (!!blob && blob.type.includes('image')) {\n      setState({ ...state,\n        imageURL: URL.createObjectURL(blob),\n        loading: true\n      });\n      handleImageChange();\n    }\n  };\n\n  const handleImageChange = async (image = state.imageURL) => {\n    await getImageDimension(image);\n    await getFullFaceDescription(image).then(fullDesc => {\n      console.log('============>', typeof fullDesc);\n      console.log('============>', fullDesc);\n      setState({ ...state,\n        fullDesc,\n        loading: false\n      });\n    });\n  };\n\n  const getImageDimension = imageURL => {\n    let img = new Image();\n\n    img.onload = () => {\n      let HEIGHT = state.WIDTH * img.height / img.width;\n      setState({ ...state,\n        HEIGHT,\n        imageDimension: {\n          width: img.width,\n          height: img.height\n        }\n      });\n    };\n\n    img.src = imageURL;\n  };\n\n  const handleDescriptorsCheck = event => {\n    setState({ ...state,\n      showDescriptors: event.target.checked\n    });\n  };\n\n  const resetState = () => {\n    setState({ ...state,\n      ...INIT_STATE\n    });\n  };\n\n  const handleFileChange = async event => {\n    resetState();\n    await setState({ ...state,\n      imageURL: URL.createObjectURL(event.target.files[0]),\n      loading: true\n    });\n    handleImageChange();\n  };\n\n  useEffect(() => {\n    // componentWillMount\n    resetState();\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    setState({ ...state,\n      WIDTH: _W\n    });\n    mounting().then(null);\n  }, []);\n  const {\n    url,\n    WIDTH,\n    HEIGHT,\n    imageURL,\n    fullDesc,\n    showDescriptors,\n    isModelLoaded,\n    error,\n    loading\n  } = state; // Display working status\n\n  let status = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Status: Model Loaded = \", isModelLoaded.toString()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 22\n  }, this);\n\n  if (!!error && error.toString() === 'TypeError: Failed to fetch') {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Status: Error Failed to fetch Image URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this);\n  } else if (loading) {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'blue'\n      },\n      children: \"Status: LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 22\n    }, this);\n  } else if (!!fullDesc && !!imageURL && !loading) {\n    if (fullDesc.length < 2) status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", fullDesc.length, \" Face Detect\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 26\n    }, this);\n    if (fullDesc.length > 1) status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", fullDesc.length, \" Faces Detect\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 26\n    }, this);\n  } // Loading Spinner\n\n\n  let spinner = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 0,\n      color: '#BE80B5',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%,-50%)',\n      textShadow: '2px 2px 3px #fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 13\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [status, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: WIDTH,\n        height: HEIGHT\n      },\n      children: [!!imageURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: WIDTH\n            },\n            src: imageURL,\n            alt: \"imageURL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }, this), !!fullDesc ? /*#__PURE__*/_jsxDEV(DrawBox, {\n          fullDesc: fullDesc,\n          faceMatcher: stateFaceMatcher,\n          imageWidth: WIDTH,\n          boxColor: boxColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 33\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }, this) : null, loading ? spinner : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: WIDTH,\n        padding: 10,\n        border: 'solid',\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"VERIFICA TU IDENTIDAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"myFileUpload\",\n        type: \"file\",\n        onChange: e => handleFileChange(e),\n        accept: \".jpg, .jpeg, .png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"descriptors\",\n          type: \"checkbox\",\n          checked: showDescriptors,\n          onChange: e => handleDescriptorsCheck(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Show Descriptors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this), !!showDescriptors ? /*#__PURE__*/_jsxDEV(ShowDescriptors, {\n        fullDesc: fullDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 42\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Register, \"wiFff/a9iI83FFNK1l7WXTtFsdQ=\");\n\n_c = Register;\nexport default withNamespaces()(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/pages/register/Register.jsx"],"names":["React","Component","useEffect","useState","withNamespaces","loadModels","getFullFaceDescription","createMatcher","isFaceDetectionModelLoaded","DrawBox","ShowDescriptors","JSON_PROFILE","testImg","MaxWidth","boxColor","INIT_STATE","url","imageURL","fullDesc","imageDimension","width","height","error","loading","Register","stateFaceMatcher","setFaceMatcher","state","setState","showDescriptors","WIDTH","HEIGHT","isModelLoaded","mounting","matcher","getImageDimension","handleImageChange","faceMatcher","handleURLChange","event","target","value","handleButtonClick","resetState","blob","fetch","then","r","catch","type","includes","URL","createObjectURL","image","console","log","img","Image","onload","src","handleDescriptorsCheck","checked","handleFileChange","files","_W","document","documentElement","clientWidth","status","toString","color","length","spinner","margin","position","top","left","transform","textShadow","display","flexDirection","alignItems","padding","border","marginTop","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SACIC,UADJ,EAEIC,sBAFJ,EAGIC,aAHJ,EAIIC,0BAJJ,QAKO,2BALP;AAMA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAO,KAAKC,YAAZ,MAA8B,sCAA9B;AACA,OAAOC,OAAP,MAAoB,mCAApB;;AAGA,MAAMC,QAAQ,GAAG,GAAjB;AACA,MAAMC,QAAQ,GAAG,SAAjB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,GAAG,EAAE,EADU;AAEfC,EAAAA,QAAQ,EAAE,EAFK;AAGfC,EAAAA,QAAQ,EAAE,EAHK;AAIfC,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAE,GADK;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAJD;AAQfC,EAAAA,KAAK,EAAE,KARQ;AASfC,EAAAA,OAAO,EAAE;AATM,CAAnB;;AAYA,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AAElB,QAAM,CAACC,gBAAD,EAAmBC,cAAnB,IAAqCvB,QAAQ,CAAC,IAAD,CAAnD;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAC/B,GAAGY,UAD4B;AAE/Bc,IAAAA,eAAe,EAAE,KAFc;AAG/BC,IAAAA,KAAK,EAAE,GAHwB;AAI/BC,IAAAA,MAAM,EAAE,GAJuB;AAK/BC,IAAAA,aAAa,EAAE,CAAC,CAACxB,0BAA0B;AALZ,GAAD,CAAlC;;AAQA,QAAMyB,QAAQ,GAAG,YAAY;AACzB,UAAM5B,UAAU,EAAhB;AACA,UAAM6B,OAAO,EAAb;AACA,UAAMC,iBAAiB,CAACvB,OAAD,CAAvB;AACA,UAAMgB,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYV,MAAAA,QAAQ,EAAEL,OAAtB;AAA+BW,MAAAA,OAAO,EAAE;AAAxC,KAAD,CAAd;AACA,UAAMa,iBAAiB,CAACxB,OAAD,CAAvB;AACH,GAND;;AAQA,QAAMsB,OAAO,GAAG,YAAY;AACxB,UAAMG,WAAW,GAAG,MAAM9B,aAAa,CAACI,YAAD,CAAvC;AACAe,IAAAA,cAAc,CAAC;AAACW,MAAAA;AAAD,KAAD,CAAd;AACH,GAHD;;AAOA,QAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7BX,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYX,MAAAA,GAAG,EAAEuB,KAAK,CAACC,MAAN,CAAaC;AAA9B,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,YAAY;AAClCC,IAAAA,UAAU;AACV,QAAIC,IAAI,GAAG,MAAMC,KAAK,CAAClB,KAAK,CAACX,GAAP,CAAL,CACZ8B,IADY,CACPC,CAAC,IAAIA,CAAC,CAACH,IAAF,EADE,EAEZI,KAFY,CAEN1B,KAAK,IAAIM,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYL,MAAAA;AAAZ,KAAD,CAFX,CAAjB;;AAGA,QAAI,CAAC,CAACsB,IAAF,IAAUA,IAAI,CAACK,IAAL,CAAUC,QAAV,CAAmB,OAAnB,CAAd,EAA2C;AACvCtB,MAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AACLV,QAAAA,QAAQ,EAAEkC,GAAG,CAACC,eAAJ,CAAoBR,IAApB,CADL;AAELrB,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIAa,MAAAA,iBAAiB;AACpB;AACJ,GAZD;;AAcA,QAAMA,iBAAiB,GAAG,OAAOiB,KAAK,GAAG1B,KAAK,CAACV,QAArB,KAAkC;AACxD,UAAMkB,iBAAiB,CAACkB,KAAD,CAAvB;AACA,UAAM/C,sBAAsB,CAAC+C,KAAD,CAAtB,CAA8BP,IAA9B,CAAmC5B,QAAQ,IAAI;AACjDoC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,OAAOrC,QAAnC;AACAoC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BrC,QAA5B;AACAU,MAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYT,QAAAA,QAAZ;AAAsBK,QAAAA,OAAO,EAAE;AAA/B,OAAD,CAAR;AACH,KAJK,CAAN;AAKH,GAPD;;AASA,QAAMY,iBAAiB,GAAGlB,QAAQ,IAAI;AAClC,QAAIuC,GAAG,GAAG,IAAIC,KAAJ,EAAV;;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAM;AACf,UAAI3B,MAAM,GAAIJ,KAAK,CAACG,KAAN,GAAc0B,GAAG,CAACnC,MAAnB,GAA6BmC,GAAG,CAACpC,KAA9C;AACAQ,MAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AACLI,QAAAA,MADK;AAELZ,QAAAA,cAAc,EAAE;AACZC,UAAAA,KAAK,EAAEoC,GAAG,CAACpC,KADC;AAEZC,UAAAA,MAAM,EAAEmC,GAAG,CAACnC;AAFA;AAFX,OAAD,CAAR;AAOH,KATD;;AAUAmC,IAAAA,GAAG,CAACG,GAAJ,GAAU1C,QAAV;AACH,GAbD;;AAeA,QAAM2C,sBAAsB,GAAGrB,KAAK,IAAI;AACpCX,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,MAAAA,eAAe,EAAEU,KAAK,CAACC,MAAN,CAAaqB;AAA1C,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMlB,UAAU,GAAG,MAAM;AACtBf,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,SAAGZ;AAAf,KAAD,CAAR;AACF,GAFD;;AAIA,QAAM+C,gBAAgB,GAAG,MAAMvB,KAAN,IAAe;AACpCI,IAAAA,UAAU;AACV,UAAMf,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AACXV,MAAAA,QAAQ,EAAEkC,GAAG,CAACC,eAAJ,CAAoBb,KAAK,CAACC,MAAN,CAAauB,KAAb,CAAmB,CAAnB,CAApB,CADC;AAEXxC,MAAAA,OAAO,EAAE;AAFE,KAAD,CAAd;AAIAa,IAAAA,iBAAiB;AACpB,GAPD;;AASAlC,EAAAA,SAAS,CAAC,MAAI;AACV;AACAyC,IAAAA,UAAU;AACV,QAAIqB,EAAE,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,WAAlC;AACA,QAAIH,EAAE,GAAGnD,QAAT,EAAmBmD,EAAE,GAAGnD,QAAL;AACnBe,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,MAAAA,KAAK,EAAEkC;AAAnB,KAAD,CAAR;AACA/B,IAAAA,QAAQ,GAAGa,IAAX,CAAgB,IAAhB;AAEH,GARQ,EAQN,EARM,CAAT;AAWA,QAAO;AACH9B,IAAAA,GADG;AAEHc,IAAAA,KAFG;AAGHC,IAAAA,MAHG;AAIHd,IAAAA,QAJG;AAKHC,IAAAA,QALG;AAMHW,IAAAA,eANG;AAOHG,IAAAA,aAPG;AAQHV,IAAAA,KARG;AASHC,IAAAA;AATG,MAUHI,KAVJ,CAhGkB,CA6Gd;;AACA,MAAIyC,MAAM,gBAAG;AAAA,0CAA2BpC,aAAa,CAACqC,QAAd,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;;AACA,MAAI,CAAC,CAAC/C,KAAF,IAAWA,KAAK,CAAC+C,QAAN,OAAqB,4BAApC,EAAkE;AAC9DD,IAAAA,MAAM,gBACF;AAAG,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAIO,IAAI/C,OAAJ,EAAa;AAChB6C,IAAAA,MAAM,gBAAG;AAAG,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AACH,GAFM,MAEA,IAAI,CAAC,CAACpD,QAAF,IAAc,CAAC,CAACD,QAAhB,IAA4B,CAACM,OAAjC,EAA0C;AAC7C,QAAIL,QAAQ,CAACqD,MAAT,GAAkB,CAAtB,EACIH,MAAM,gBAAG;AAAA,6BAAYlD,QAAQ,CAACqD,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AACJ,QAAIrD,QAAQ,CAACqD,MAAT,GAAkB,CAAtB,EACIH,MAAM,gBAAG;AAAA,6BAAYlD,QAAQ,CAACqD,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AACP,GA1Ha,CA4Hd;;;AACA,MAAIC,OAAO,gBACP;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,CADL;AAEHH,MAAAA,KAAK,EAAE,SAFJ;AAGHI,MAAAA,QAAQ,EAAE,UAHP;AAIHC,MAAAA,GAAG,EAAE,KAJF;AAKHC,MAAAA,IAAI,EAAE,KALH;AAMHC,MAAAA,SAAS,EAAE,sBANR;AAOHC,MAAAA,UAAU,EAAE;AAPT,KADX;AAAA,4BAWI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAiBA,sBACI;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAE,MADN;AAEHC,MAAAA,aAAa,EAAE,QAFZ;AAGHC,MAAAA,UAAU,EAAE;AAHT,KADX;AAAA,eAOKb,MAPL,eAQI;AACI,MAAA,KAAK,EAAE;AACHM,QAAAA,QAAQ,EAAE,UADP;AAEHtD,QAAAA,KAAK,EAAEU,KAFJ;AAGHT,QAAAA,MAAM,EAAEU;AAHL,OADX;AAAA,iBAOK,CAAC,CAACd,QAAF,gBACG;AACI,QAAA,KAAK,EAAE;AACHyD,UAAAA,QAAQ,EAAE;AADP,SADX;AAAA,gCAKI;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,QAAQ,EAAE;AAAZ,WAAZ;AAAA,iCACI;AAAK,YAAA,KAAK,EAAE;AAAEtD,cAAAA,KAAK,EAAEU;AAAT,aAAZ;AAA8B,YAAA,GAAG,EAAEb,QAAnC;AAA6C,YAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ,EAQK,CAAC,CAACC,QAAF,gBACG,QAAC,OAAD;AACI,UAAA,QAAQ,EAAEA,QADd;AAEI,UAAA,WAAW,EAAEO,gBAFjB;AAGI,UAAA,UAAU,EAAEK,KAHhB;AAII,UAAA,QAAQ,EAAEhB;AAJd;AAAA;AAAA;AAAA;AAAA,gBADH,GAOG,IAfR;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAkBG,IAzBR,EA0BKS,OAAO,GAAGiD,OAAH,GAAa,IA1BzB;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAoCI;AACI,MAAA,KAAK,EAAE;AACHpD,QAAAA,KAAK,EAAEU,KADJ;AAEHoD,QAAAA,OAAO,EAAE,EAFN;AAGHC,QAAAA,MAAM,EAAE,OAHL;AAIHC,QAAAA,SAAS,EAAE;AAJR,OADX;AAAA,8BAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AACI,QAAA,EAAE,EAAC,cADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAGC,CAAD,IAAKvB,gBAAgB,CAACuB,CAAD,CAHnC;AAII,QAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI;AAAA;AAAA;AAAA;AAAA,cAfJ,eA4BI;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,aADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,OAAO,EAAExD,eAHb;AAII,UAAA,QAAQ,EAAGwD,CAAD,IAAKzB,sBAAsB,CAACyB,CAAD;AAJzC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ,EAqCK,CAAC,CAACxD,eAAF,gBAAoB,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAEX;AAA3B;AAAA;AAAA;AAAA;AAAA,cAApB,GAA8D,IArCnE;AAAA;AAAA;AAAA;AAAA;AAAA,YApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8EP,CA5ND;;GAAMM,Q;;KAAAA,Q;AA+NN,eAAepB,cAAc,GAAGoB,QAAH,CAA7B","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport {\r\n    loadModels,\r\n    getFullFaceDescription,\r\n    createMatcher,\r\n    isFaceDetectionModelLoaded\r\n} from '../../components/api/face';\r\nimport DrawBox from '../../components/api/DrawBox';\r\nimport ShowDescriptors from '../../components/api/showDescriptors';\r\nimport * as JSON_PROFILE from '../../components/api/descriptor.json';\r\nimport testImg from '../../components/api/img/test.png';\r\n\r\n\r\nconst MaxWidth = 600;\r\nconst boxColor = '#BE80B5';\r\n\r\nconst INIT_STATE = {\r\n    url: '',\r\n    imageURL: '',\r\n    fullDesc: [],\r\n    imageDimension: {\r\n        width: 300,\r\n        height: 100\r\n    },\r\n    error: false,\r\n    loading: false\r\n};\r\n\r\nconst Register = () =>{\r\n\r\n    const [stateFaceMatcher, setFaceMatcher] = useState(null)\r\n    const [state, setState] = useState({\r\n        ...INIT_STATE,\r\n        showDescriptors: false,\r\n        WIDTH: 300,\r\n        HEIGHT: 100,\r\n        isModelLoaded: !!isFaceDetectionModelLoaded()\r\n    });\r\n\r\n    const mounting = async () => {\r\n        await loadModels();\r\n        await matcher();\r\n        await getImageDimension(testImg);\r\n        await setState({ ...state, imageURL: testImg, loading: true });\r\n        await handleImageChange(testImg);\r\n    };\r\n\r\n    const matcher = async () => {\r\n        const faceMatcher = await createMatcher(JSON_PROFILE);\r\n        setFaceMatcher({faceMatcher});\r\n    };\r\n\r\n\r\n\r\n    const handleURLChange = event => {\r\n        setState({ ...state, url: event.target.value });\r\n    };\r\n\r\n    const handleButtonClick = async () => {\r\n        resetState();\r\n        let blob = await fetch(state.url)\r\n            .then(r => r.blob())\r\n            .catch(error => setState({ ...state, error }));\r\n        if (!!blob && blob.type.includes('image')) {\r\n            setState({...state,\r\n                imageURL: URL.createObjectURL(blob),\r\n                loading: true\r\n            });\r\n            handleImageChange();\r\n        }\r\n    };\r\n\r\n    const handleImageChange = async (image = state.imageURL) => {\r\n        await getImageDimension(image);\r\n        await getFullFaceDescription(image).then(fullDesc => {\r\n            console.log('============>',typeof(fullDesc));\r\n            console.log('============>',fullDesc);\r\n            setState({ ...state, fullDesc, loading: false });\r\n        });\r\n    };\r\n\r\n    const getImageDimension = imageURL => {\r\n        let img = new Image();\r\n        img.onload = () => {\r\n            let HEIGHT = (state.WIDTH * img.height) / img.width;\r\n            setState({...state,\r\n                HEIGHT,\r\n                imageDimension: {\r\n                    width: img.width,\r\n                    height: img.height\r\n                }\r\n            });\r\n        };\r\n        img.src = imageURL;\r\n    };\r\n\r\n    const handleDescriptorsCheck = event => {\r\n        setState({ ...state, showDescriptors: event.target.checked });\r\n    };\r\n\r\n    const resetState = () => {\r\n       setState({ ...state, ...INIT_STATE });\r\n    };\r\n\r\n    const handleFileChange = async event => {\r\n        resetState();\r\n        await setState({...state,\r\n            imageURL: URL.createObjectURL(event.target.files[0]),\r\n            loading: true\r\n        });\r\n        handleImageChange();\r\n    };\r\n\r\n    useEffect(()=>{\r\n        // componentWillMount\r\n        resetState();\r\n        let _W = document.documentElement.clientWidth;\r\n        if (_W > MaxWidth) _W = MaxWidth;\r\n        setState({ ...state, WIDTH: _W });\r\n        mounting().then(null);\r\n\r\n    }, [])\r\n\r\n\r\n    const  {\r\n        url,\r\n        WIDTH,\r\n        HEIGHT,\r\n        imageURL,\r\n        fullDesc,\r\n        showDescriptors,\r\n        isModelLoaded,\r\n        error,\r\n        loading\r\n    } = state;\r\n\r\n\r\n        // Display working status\r\n        let status = <p>Status: Model Loaded = {isModelLoaded.toString()}</p>;\r\n        if (!!error && error.toString() === 'TypeError: Failed to fetch') {\r\n            status = (\r\n                <p style={{ color: 'red' }}>Status: Error Failed to fetch Image URL</p>\r\n            );\r\n        } else if (loading) {\r\n            status = <p style={{ color: 'blue' }}>Status: LOADING...</p>;\r\n        } else if (!!fullDesc && !!imageURL && !loading) {\r\n            if (fullDesc.length < 2)\r\n                status = <p>Status: {fullDesc.length} Face Detect</p>;\r\n            if (fullDesc.length > 1)\r\n                status = <p>Status: {fullDesc.length} Faces Detect</p>;\r\n        }\r\n\r\n        // Loading Spinner\r\n        let spinner = (\r\n            <div\r\n                style={{\r\n                    margin: 0,\r\n                    color: '#BE80B5',\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%,-50%)',\r\n                    textShadow: '2px 2px 3px #fff'\r\n                }}\r\n            >\r\n                <div className=\"loading\" />\r\n                <h3>Processing...</h3>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                {status}\r\n                <div\r\n                    style={{\r\n                        position: 'relative',\r\n                        width: WIDTH,\r\n                        height: HEIGHT\r\n                    }}\r\n                >\r\n                    {!!imageURL ? (\r\n                        <div\r\n                            style={{\r\n                                position: 'relative'\r\n                            }}\r\n                        >\r\n                            <div style={{ position: 'absolute' }}>\r\n                                <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\r\n                            </div>\r\n                            {!!fullDesc ? (\r\n                                <DrawBox\r\n                                    fullDesc={fullDesc}\r\n                                    faceMatcher={stateFaceMatcher}\r\n                                    imageWidth={WIDTH}\r\n                                    boxColor={boxColor}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    ) : null}\r\n                    {loading ? spinner : null}\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        width: WIDTH,\r\n                        padding: 10,\r\n                        border: 'solid',\r\n                        marginTop: 10\r\n                    }}\r\n                >\r\n                    <p>VERIFICA TU IDENTIDAD</p>\r\n                    <input\r\n                        id=\"myFileUpload\"\r\n                        type=\"file\"\r\n                        onChange={(e)=>handleFileChange(e)}\r\n                        accept=\".jpg, .jpeg, .png\"\r\n                    />\r\n                    <br />\r\n                    {/*  <div className=\"URLInput\">\r\n            <input\r\n              type=\"url\"\r\n              name=\"url\"\r\n              id=\"url\"\r\n              placeholder=\"Place your photo URL here (only .jpg, .jpeg, .png)\"\r\n              pattern=\"https://.*\"\r\n              size=\"30\"\r\n              onChange={this.handleURLChange}\r\n            />\r\n            <button onClick={this.handleButtonClick}>Upload</button>\r\n          </div>*/}\r\n                    <div>\r\n                        <input\r\n                            name=\"descriptors\"\r\n                            type=\"checkbox\"\r\n                            checked={showDescriptors}\r\n                            onChange={(e)=>handleDescriptorsCheck(e)}\r\n                        />\r\n                        <label>Show Descriptors</label>\r\n                    </div>\r\n                    {!!showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\n\r\nexport default withNamespaces()(Register);\r\n"]},"metadata":{},"sourceType":"module"}