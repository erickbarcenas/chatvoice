{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuga\\\\Documents\\\\GitU\\\\IIMAS\\\\iimas_auth_frontend\\\\src\\\\pages\\\\register\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport { loadModels, getFullFaceDescription, createMatcher, isFaceDetectionModelLoaded } from '../../components/api/face';\nimport DrawBox from '../../components/api/DrawBox';\nimport ShowDescriptors from '../../components/api/showDescriptors';\nimport * as JSON_PROFILE from '../../components/api/descriptor.json';\nimport testImg from '../../components/api/img/test.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaxWidth = 600;\nconst boxColor = '#BE80B5';\nconst INIT_STATE = {\n  url: '',\n  imageURL: '',\n  fullDesc: [],\n  imageDimension: {\n    width: 300,\n    height: 100\n  },\n  error: false,\n  loading: false\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mounting = async () => {\n      await loadModels();\n      await this.matcher();\n      await this.getImageDimension(testImg);\n      await this.setState({\n        imageURL: testImg,\n        loading: true\n      });\n      await this.handleImageChange(testImg);\n    };\n\n    this.matcher = async () => {\n      const faceMatcher = await createMatcher(JSON_PROFILE);\n      this.setState({\n        faceMatcher\n      });\n    };\n\n    this.handleFileChange = async event => {\n      this.resetState();\n      await this.setState({\n        imageURL: URL.createObjectURL(event.target.files[0]),\n        loading: true\n      });\n      this.handleImageChange();\n    };\n\n    this.handleURLChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleButtonClick = async () => {\n      this.resetState();\n      let blob = await fetch(this.state.url).then(r => r.blob()).catch(error => this.setState({\n        error\n      }));\n\n      if (!!blob && blob.type.includes('image')) {\n        this.setState({\n          imageURL: URL.createObjectURL(blob),\n          loading: true\n        });\n        this.handleImageChange();\n      }\n    };\n\n    this.handleImageChange = async (image = this.state.imageURL) => {\n      await this.getImageDimension(image);\n      await getFullFaceDescription(image).then(fullDesc => {\n        console.log('============>', typeof fullDesc);\n        console.log('============>', fullDesc);\n        this.setState({\n          fullDesc,\n          loading: false\n        });\n      });\n    };\n\n    this.getImageDimension = imageURL => {\n      let img = new Image();\n\n      img.onload = () => {\n        let HEIGHT = this.state.WIDTH * img.height / img.width;\n        this.setState({\n          HEIGHT,\n          imageDimension: {\n            width: img.width,\n            height: img.height\n          }\n        });\n      };\n\n      img.src = imageURL;\n    };\n\n    this.handleDescriptorsCheck = event => {\n      this.setState({\n        showDescriptors: event.target.checked\n      });\n    };\n\n    this.resetState = () => {\n      this.setState({ ...INIT_STATE\n      });\n    };\n\n    this.state = { ...INIT_STATE,\n      faceMatcher: null,\n      showDescriptors: false,\n      WIDTH: null,\n      HEIGHT: 0,\n      isModelLoaded: !!isFaceDetectionModelLoaded()\n    };\n  }\n\n  componentWillMount() {\n    this.resetState();\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    this.setState({\n      WIDTH: _W\n    });\n    this.mounting();\n  }\n\n  render() {\n    const {\n      WIDTH,\n      HEIGHT,\n      imageURL,\n      fullDesc,\n      faceMatcher,\n      showDescriptors,\n      isModelLoaded,\n      error,\n      loading\n    } = this.state;\n    console.log(showDescriptors); // Display working status\n\n    let status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: Model Loaded = \", isModelLoaded.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 22\n    }, this);\n\n    if (!!error && error.toString() === 'TypeError: Failed to fetch') {\n      status = /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Status: Error Failed to fetch Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this);\n    } else if (loading) {\n      status = /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'blue'\n        },\n        children: \"Status: LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 22\n      }, this);\n    } else if (!!fullDesc && !!imageURL && !loading) {\n      if (fullDesc.length < 2) status = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", fullDesc.length, \" Face Detect\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 26\n      }, this);\n      if (fullDesc.length > 1) status = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", fullDesc.length, \" Faces Detect\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 26\n      }, this);\n    } // Loading Spinner\n\n\n    let spinner = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 0,\n        color: '#BE80B5',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        textShadow: '2px 2px 3px #fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [status, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          width: WIDTH,\n          height: HEIGHT\n        },\n        children: [!!imageURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: WIDTH\n              },\n              src: imageURL,\n              alt: \"imageURL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), !!fullDesc ? /*#__PURE__*/_jsxDEV(DrawBox, {\n            fullDesc: fullDesc,\n            faceMatcher: faceMatcher,\n            imageWidth: WIDTH,\n            boxColor: boxColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this) : null, loading ? spinner : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: WIDTH,\n          padding: 10,\n          border: 'solid',\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"VERIFICA TU IDENTIDAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"myFileUpload\",\n          type: \"file\",\n          onChange: this.handleFileChange,\n          accept: \".jpg, .jpeg, .png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"descriptors\",\n            type: \"checkbox\",\n            checked: this.state.showDescriptors,\n            onChange: this.handleDescriptorsCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Show Descriptors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), !!showDescriptors ? /*#__PURE__*/_jsxDEV(ShowDescriptors, {\n          fullDesc: fullDesc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 42\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withNamespaces()(Register);","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/pages/register/Register.js"],"names":["React","Component","withNamespaces","loadModels","getFullFaceDescription","createMatcher","isFaceDetectionModelLoaded","DrawBox","ShowDescriptors","JSON_PROFILE","testImg","MaxWidth","boxColor","INIT_STATE","url","imageURL","fullDesc","imageDimension","width","height","error","loading","Register","constructor","props","mounting","matcher","getImageDimension","setState","handleImageChange","faceMatcher","handleFileChange","event","resetState","URL","createObjectURL","target","files","handleURLChange","value","handleButtonClick","blob","fetch","state","then","r","catch","type","includes","image","console","log","img","Image","onload","HEIGHT","WIDTH","src","handleDescriptorsCheck","showDescriptors","checked","isModelLoaded","componentWillMount","_W","document","documentElement","clientWidth","render","status","toString","color","length","spinner","margin","position","top","left","transform","textShadow","display","flexDirection","alignItems","padding","border","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SACIC,UADJ,EAEIC,sBAFJ,EAGIC,aAHJ,EAIIC,0BAJJ,QAKO,2BALP;AAMA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAO,KAAKC,YAAZ,MAA8B,sCAA9B;AACA,OAAOC,OAAP,MAAoB,mCAApB;;AAKA,MAAMC,QAAQ,GAAG,GAAjB;AACA,MAAMC,QAAQ,GAAG,SAAjB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,GAAG,EAAE,EADU;AAEfC,EAAAA,QAAQ,EAAE,EAFK;AAGfC,EAAAA,QAAQ,EAAE,EAHK;AAIfC,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAE,GADK;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAJD;AAQfC,EAAAA,KAAK,EAAE,KARQ;AASfC,EAAAA,OAAO,EAAE;AATM,CAAnB;;AAYA,MAAMC,QAAN,SAAuBrB,SAAvB,CAAgC;AAC5BsB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoBnBC,QApBmB,GAoBR,YAAY;AACnB,YAAMtB,UAAU,EAAhB;AACA,YAAM,KAAKuB,OAAL,EAAN;AACA,YAAM,KAAKC,iBAAL,CAAuBjB,OAAvB,CAAN;AACA,YAAM,KAAKkB,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAEL,OAAZ;AAAqBW,QAAAA,OAAO,EAAE;AAA9B,OAAd,CAAN;AACA,YAAM,KAAKQ,iBAAL,CAAuBnB,OAAvB,CAAN;AACH,KA1BkB;;AAAA,SA4BnBgB,OA5BmB,GA4BT,YAAY;AAClB,YAAMI,WAAW,GAAG,MAAMzB,aAAa,CAACI,YAAD,CAAvC;AACA,WAAKmB,QAAL,CAAc;AAAEE,QAAAA;AAAF,OAAd;AACH,KA/BkB;;AAAA,SAiCnBC,gBAjCmB,GAiCA,MAAMC,KAAN,IAAe;AAC9B,WAAKC,UAAL;AACA,YAAM,KAAKL,QAAL,CAAc;AAChBb,QAAAA,QAAQ,EAAEmB,GAAG,CAACC,eAAJ,CAAoBH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB,CADM;AAEhBhB,QAAAA,OAAO,EAAE;AAFO,OAAd,CAAN;AAIA,WAAKQ,iBAAL;AACH,KAxCkB;;AAAA,SA0CnBS,eA1CmB,GA0CDN,KAAK,IAAI;AACvB,WAAKJ,QAAL,CAAc;AAAEd,QAAAA,GAAG,EAAEkB,KAAK,CAACI,MAAN,CAAaG;AAApB,OAAd;AACH,KA5CkB;;AAAA,SA8CnBC,iBA9CmB,GA8CC,YAAY;AAC5B,WAAKP,UAAL;AACA,UAAIQ,IAAI,GAAG,MAAMC,KAAK,CAAC,KAAKC,KAAL,CAAW7B,GAAZ,CAAL,CACZ8B,IADY,CACPC,CAAC,IAAIA,CAAC,CAACJ,IAAF,EADE,EAEZK,KAFY,CAEN1B,KAAK,IAAI,KAAKQ,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd,CAFH,CAAjB;;AAGA,UAAI,CAAC,CAACqB,IAAF,IAAUA,IAAI,CAACM,IAAL,CAAUC,QAAV,CAAmB,OAAnB,CAAd,EAA2C;AACvC,aAAKpB,QAAL,CAAc;AACVb,UAAAA,QAAQ,EAAEmB,GAAG,CAACC,eAAJ,CAAoBM,IAApB,CADA;AAEVpB,UAAAA,OAAO,EAAE;AAFC,SAAd;AAIA,aAAKQ,iBAAL;AACH;AACJ,KA1DkB;;AAAA,SA4DnBA,iBA5DmB,GA4DC,OAAOoB,KAAK,GAAG,KAAKN,KAAL,CAAW5B,QAA1B,KAAuC;AACvD,YAAM,KAAKY,iBAAL,CAAuBsB,KAAvB,CAAN;AACA,YAAM7C,sBAAsB,CAAC6C,KAAD,CAAtB,CAA8BL,IAA9B,CAAmC5B,QAAQ,IAAI;AACjDkC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,OAAOnC,QAAnC;AACAkC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BnC,QAA5B;AACA,aAAKY,QAAL,CAAc;AAAEZ,UAAAA,QAAF;AAAYK,UAAAA,OAAO,EAAE;AAArB,SAAd;AACH,OAJK,CAAN;AAKH,KAnEkB;;AAAA,SAqEnBM,iBArEmB,GAqECZ,QAAQ,IAAI;AAC5B,UAAIqC,GAAG,GAAG,IAAIC,KAAJ,EAAV;;AACAD,MAAAA,GAAG,CAACE,MAAJ,GAAa,MAAM;AACf,YAAIC,MAAM,GAAI,KAAKZ,KAAL,CAAWa,KAAX,GAAmBJ,GAAG,CAACjC,MAAxB,GAAkCiC,GAAG,CAAClC,KAAnD;AACA,aAAKU,QAAL,CAAc;AACV2B,UAAAA,MADU;AAEVtC,UAAAA,cAAc,EAAE;AACZC,YAAAA,KAAK,EAAEkC,GAAG,CAAClC,KADC;AAEZC,YAAAA,MAAM,EAAEiC,GAAG,CAACjC;AAFA;AAFN,SAAd;AAOH,OATD;;AAUAiC,MAAAA,GAAG,CAACK,GAAJ,GAAU1C,QAAV;AACH,KAlFkB;;AAAA,SAoFnB2C,sBApFmB,GAoFM1B,KAAK,IAAI;AAC9B,WAAKJ,QAAL,CAAc;AAAE+B,QAAAA,eAAe,EAAE3B,KAAK,CAACI,MAAN,CAAawB;AAAhC,OAAd;AACH,KAtFkB;;AAAA,SAwFnB3B,UAxFmB,GAwFN,MAAM;AACf,WAAKL,QAAL,CAAc,EAAE,GAAGf;AAAL,OAAd;AACH,KA1FkB;;AAEf,SAAK8B,KAAL,GAAa,EACT,GAAG9B,UADM;AAETiB,MAAAA,WAAW,EAAE,IAFJ;AAGT6B,MAAAA,eAAe,EAAE,KAHR;AAITH,MAAAA,KAAK,EAAE,IAJE;AAKTD,MAAAA,MAAM,EAAE,CALC;AAMTM,MAAAA,aAAa,EAAE,CAAC,CAACvD,0BAA0B;AANlC,KAAb;AAQH;;AAEDwD,EAAAA,kBAAkB,GAAG;AACjB,SAAK7B,UAAL;AACA,QAAI8B,EAAE,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,WAAlC;AACA,QAAIH,EAAE,GAAGpD,QAAT,EAAmBoD,EAAE,GAAGpD,QAAL;AACnB,SAAKiB,QAAL,CAAc;AAAE4B,MAAAA,KAAK,EAAEO;AAAT,KAAd;AACA,SAAKtC,QAAL;AACH;;AAyED0C,EAAAA,MAAM,GAAG;AACL,UAAM;AACFX,MAAAA,KADE;AAEFD,MAAAA,MAFE;AAGFxC,MAAAA,QAHE;AAIFC,MAAAA,QAJE;AAKFc,MAAAA,WALE;AAMF6B,MAAAA,eANE;AAOFE,MAAAA,aAPE;AAQFzC,MAAAA,KARE;AASFC,MAAAA;AATE,QAUF,KAAKsB,KAVT;AAWAO,IAAAA,OAAO,CAACC,GAAR,CAAYQ,eAAZ,EAZK,CAcL;;AACA,QAAIS,MAAM,gBAAG;AAAA,4CAA2BP,aAAa,CAACQ,QAAd,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb;;AACA,QAAI,CAAC,CAACjD,KAAF,IAAWA,KAAK,CAACiD,QAAN,OAAqB,4BAApC,EAAkE;AAC9DD,MAAAA,MAAM,gBACF;AAAG,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAIO,IAAIjD,OAAJ,EAAa;AAChB+C,MAAAA,MAAM,gBAAG;AAAG,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACH,KAFM,MAEA,IAAI,CAAC,CAACtD,QAAF,IAAc,CAAC,CAACD,QAAhB,IAA4B,CAACM,OAAjC,EAA0C;AAC7C,UAAIL,QAAQ,CAACuD,MAAT,GAAkB,CAAtB,EACIH,MAAM,gBAAG;AAAA,+BAAYpD,QAAQ,CAACuD,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACJ,UAAIvD,QAAQ,CAACuD,MAAT,GAAkB,CAAtB,EACIH,MAAM,gBAAG;AAAA,+BAAYpD,QAAQ,CAACuD,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACP,KA3BI,CA6BL;;;AACA,QAAIC,OAAO,gBACP;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,CADL;AAEHH,QAAAA,KAAK,EAAE,SAFJ;AAGHI,QAAAA,QAAQ,EAAE,UAHP;AAIHC,QAAAA,GAAG,EAAE,KAJF;AAKHC,QAAAA,IAAI,EAAE,KALH;AAMHC,QAAAA,SAAS,EAAE,sBANR;AAOHC,QAAAA,UAAU,EAAE;AAPT,OADX;AAAA,8BAWI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;;AAiBA,wBACI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,MADN;AAEHC,QAAAA,aAAa,EAAE,QAFZ;AAGHC,QAAAA,UAAU,EAAE;AAHT,OADX;AAAA,iBAOKb,MAPL,eAQI;AACI,QAAA,KAAK,EAAE;AACHM,UAAAA,QAAQ,EAAE,UADP;AAEHxD,UAAAA,KAAK,EAAEsC,KAFJ;AAGHrC,UAAAA,MAAM,EAAEoC;AAHL,SADX;AAAA,mBAOK,CAAC,CAACxC,QAAF,gBACG;AACI,UAAA,KAAK,EAAE;AACH2D,YAAAA,QAAQ,EAAE;AADP,WADX;AAAA,kCAKI;AAAK,YAAA,KAAK,EAAE;AAAEA,cAAAA,QAAQ,EAAE;AAAZ,aAAZ;AAAA,mCACI;AAAK,cAAA,KAAK,EAAE;AAAExD,gBAAAA,KAAK,EAAEsC;AAAT,eAAZ;AAA8B,cAAA,GAAG,EAAEzC,QAAnC;AAA6C,cAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ,EAQK,CAAC,CAACC,QAAF,gBACG,QAAC,OAAD;AACI,YAAA,QAAQ,EAAEA,QADd;AAEI,YAAA,WAAW,EAAEc,WAFjB;AAGI,YAAA,UAAU,EAAE0B,KAHhB;AAII,YAAA,QAAQ,EAAE5C;AAJd;AAAA;AAAA;AAAA;AAAA,kBADH,GAOG,IAfR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,GAkBG,IAzBR,EA0BKS,OAAO,GAAGmD,OAAH,GAAa,IA1BzB;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAoCI;AACI,QAAA,KAAK,EAAE;AACHtD,UAAAA,KAAK,EAAEsC,KADJ;AAEH0B,UAAAA,OAAO,EAAE,EAFN;AAGHC,UAAAA,MAAM,EAAE,OAHL;AAIHC,UAAAA,SAAS,EAAE;AAJR,SADX;AAAA,gCAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AACI,UAAA,EAAE,EAAC,cADP;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,QAAQ,EAAE,KAAKrD,gBAHnB;AAII,UAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,gBATJ,eAeI;AAAA;AAAA;AAAA;AAAA,gBAfJ,eA4BI;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,aADT;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,OAAO,EAAE,KAAKY,KAAL,CAAWgB,eAHxB;AAII,YAAA,QAAQ,EAAE,KAAKD;AAJnB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ,EAqCK,CAAC,CAACC,eAAF,gBAAoB,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAE3C;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAApB,GAA8D,IArCnE;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8EH;;AAzN2B;;AA4NhC,eAAed,cAAc,GAAGoB,QAAH,CAA7B","sourcesContent":["import React, {Component} from 'react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport {\r\n    loadModels,\r\n    getFullFaceDescription,\r\n    createMatcher,\r\n    isFaceDetectionModelLoaded\r\n} from '../../components/api/face';\r\nimport DrawBox from '../../components/api/DrawBox';\r\nimport ShowDescriptors from '../../components/api/showDescriptors';\r\nimport * as JSON_PROFILE from '../../components/api/descriptor.json';\r\nimport testImg from '../../components/api/img/test.png';\r\n\r\n\r\n\r\n\r\nconst MaxWidth = 600;\r\nconst boxColor = '#BE80B5';\r\n\r\nconst INIT_STATE = {\r\n    url: '',\r\n    imageURL: '',\r\n    fullDesc: [],\r\n    imageDimension: {\r\n        width: 300,\r\n        height: 100\r\n    },\r\n    error: false,\r\n    loading: false\r\n};\r\n\r\nclass Register extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...INIT_STATE,\r\n            faceMatcher: null,\r\n            showDescriptors: false,\r\n            WIDTH: null,\r\n            HEIGHT: 0,\r\n            isModelLoaded: !!isFaceDetectionModelLoaded()\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.resetState();\r\n        let _W = document.documentElement.clientWidth;\r\n        if (_W > MaxWidth) _W = MaxWidth;\r\n        this.setState({ WIDTH: _W });\r\n        this.mounting();\r\n    }\r\n\r\n    mounting = async () => {\r\n        await loadModels();\r\n        await this.matcher();\r\n        await this.getImageDimension(testImg);\r\n        await this.setState({ imageURL: testImg, loading: true });\r\n        await this.handleImageChange(testImg);\r\n    };\r\n\r\n    matcher = async () => {\r\n        const faceMatcher = await createMatcher(JSON_PROFILE);\r\n        this.setState({ faceMatcher });\r\n    };\r\n\r\n    handleFileChange = async event => {\r\n        this.resetState();\r\n        await this.setState({\r\n            imageURL: URL.createObjectURL(event.target.files[0]),\r\n            loading: true\r\n        });\r\n        this.handleImageChange();\r\n    };\r\n\r\n    handleURLChange = event => {\r\n        this.setState({ url: event.target.value });\r\n    };\r\n\r\n    handleButtonClick = async () => {\r\n        this.resetState();\r\n        let blob = await fetch(this.state.url)\r\n            .then(r => r.blob())\r\n            .catch(error => this.setState({ error }));\r\n        if (!!blob && blob.type.includes('image')) {\r\n            this.setState({\r\n                imageURL: URL.createObjectURL(blob),\r\n                loading: true\r\n            });\r\n            this.handleImageChange();\r\n        }\r\n    };\r\n\r\n    handleImageChange = async (image = this.state.imageURL) => {\r\n        await this.getImageDimension(image);\r\n        await getFullFaceDescription(image).then(fullDesc => {\r\n            console.log('============>',typeof(fullDesc));\r\n            console.log('============>',fullDesc);\r\n            this.setState({ fullDesc, loading: false });\r\n        });\r\n    };\r\n\r\n    getImageDimension = imageURL => {\r\n        let img = new Image();\r\n        img.onload = () => {\r\n            let HEIGHT = (this.state.WIDTH * img.height) / img.width;\r\n            this.setState({\r\n                HEIGHT,\r\n                imageDimension: {\r\n                    width: img.width,\r\n                    height: img.height\r\n                }\r\n            });\r\n        };\r\n        img.src = imageURL;\r\n    };\r\n\r\n    handleDescriptorsCheck = event => {\r\n        this.setState({ showDescriptors: event.target.checked });\r\n    };\r\n\r\n    resetState = () => {\r\n        this.setState({ ...INIT_STATE });\r\n    };\r\n    render() {\r\n        const {\r\n            WIDTH,\r\n            HEIGHT,\r\n            imageURL,\r\n            fullDesc,\r\n            faceMatcher,\r\n            showDescriptors,\r\n            isModelLoaded,\r\n            error,\r\n            loading\r\n        } = this.state;\r\n        console.log(showDescriptors)\r\n\r\n        // Display working status\r\n        let status = <p>Status: Model Loaded = {isModelLoaded.toString()}</p>;\r\n        if (!!error && error.toString() === 'TypeError: Failed to fetch') {\r\n            status = (\r\n                <p style={{ color: 'red' }}>Status: Error Failed to fetch Image URL</p>\r\n            );\r\n        } else if (loading) {\r\n            status = <p style={{ color: 'blue' }}>Status: LOADING...</p>;\r\n        } else if (!!fullDesc && !!imageURL && !loading) {\r\n            if (fullDesc.length < 2)\r\n                status = <p>Status: {fullDesc.length} Face Detect</p>;\r\n            if (fullDesc.length > 1)\r\n                status = <p>Status: {fullDesc.length} Faces Detect</p>;\r\n        }\r\n\r\n        // Loading Spinner\r\n        let spinner = (\r\n            <div\r\n                style={{\r\n                    margin: 0,\r\n                    color: '#BE80B5',\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%,-50%)',\r\n                    textShadow: '2px 2px 3px #fff'\r\n                }}\r\n            >\r\n                <div className=\"loading\" />\r\n                <h3>Processing...</h3>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                {status}\r\n                <div\r\n                    style={{\r\n                        position: 'relative',\r\n                        width: WIDTH,\r\n                        height: HEIGHT\r\n                    }}\r\n                >\r\n                    {!!imageURL ? (\r\n                        <div\r\n                            style={{\r\n                                position: 'relative'\r\n                            }}\r\n                        >\r\n                            <div style={{ position: 'absolute' }}>\r\n                                <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\r\n                            </div>\r\n                            {!!fullDesc ? (\r\n                                <DrawBox\r\n                                    fullDesc={fullDesc}\r\n                                    faceMatcher={faceMatcher}\r\n                                    imageWidth={WIDTH}\r\n                                    boxColor={boxColor}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    ) : null}\r\n                    {loading ? spinner : null}\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        width: WIDTH,\r\n                        padding: 10,\r\n                        border: 'solid',\r\n                        marginTop: 10\r\n                    }}\r\n                >\r\n                    <p>VERIFICA TU IDENTIDAD</p>\r\n                    <input\r\n                        id=\"myFileUpload\"\r\n                        type=\"file\"\r\n                        onChange={this.handleFileChange}\r\n                        accept=\".jpg, .jpeg, .png\"\r\n                    />\r\n                    <br />\r\n                    {/*  <div className=\"URLInput\">\r\n            <input\r\n              type=\"url\"\r\n              name=\"url\"\r\n              id=\"url\"\r\n              placeholder=\"Place your photo URL here (only .jpg, .jpeg, .png)\"\r\n              pattern=\"https://.*\"\r\n              size=\"30\"\r\n              onChange={this.handleURLChange}\r\n            />\r\n            <button onClick={this.handleButtonClick}>Upload</button>\r\n          </div>*/}\r\n                    <div>\r\n                        <input\r\n                            name=\"descriptors\"\r\n                            type=\"checkbox\"\r\n                            checked={this.state.showDescriptors}\r\n                            onChange={this.handleDescriptorsCheck}\r\n                        />\r\n                        <label>Show Descriptors</label>\r\n                    </div>\r\n                    {!!showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withNamespaces()(Register);\r\n"]},"metadata":{},"sourceType":"module"}