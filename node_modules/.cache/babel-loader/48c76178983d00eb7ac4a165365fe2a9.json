{"ast":null,"code":"import _slicedToArray from\"C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMemo,useEffect,useState}from'react';import io from'socket.io-client';export var useSocket=function useSocket(serverPath){var socket=useMemo(function(){return io.connect(serverPath);},[serverPath]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),online=_useState2[0],setOnline=_useState2[1];useEffect(function(){setOnline(socket.connected);},[socket]);useEffect(function(){socket.on('connect',function(){setOnline(true);});},[socket]);useEffect(function(){socket.on('disconnect',function(){setOnline(false);});},[socket]);return{socket:socket,online:online};};","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/hooks/useSocket.js"],"names":["useMemo","useEffect","useState","io","useSocket","serverPath","socket","connect","online","setOnline","connected","on"],"mappings":"8KAAA,OAASA,OAAT,CAAkBC,SAAlB,CAA6BC,QAA7B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAEC,UAAF,CAAkB,CAEvC,GAAMC,CAAAA,MAAM,CAAGN,OAAO,CAAE,iBAAMG,CAAAA,EAAE,CAACI,OAAH,CAAYF,UAAZ,CAAN,EAAF,CAAkC,CAAEA,UAAF,CAAlC,CAAtB,CAFuC,cAGTH,QAAQ,CAAC,KAAD,CAHC,wCAG/BM,MAH+B,eAGvBC,SAHuB,eAKvCR,SAAS,CAAC,UAAM,CACZQ,SAAS,CAAEH,MAAM,CAACI,SAAT,CAAT,CACH,CAFQ,CAEN,CAAEJ,MAAF,CAFM,CAAT,CAIAL,SAAS,CAAE,UAAM,CACbK,MAAM,CAACK,EAAP,CAAU,SAAV,CAAqB,UAAM,CACvBF,SAAS,CAAE,IAAF,CAAT,CACH,CAFD,EAIH,CALQ,CAKN,CAAEH,MAAF,CALM,CAAT,CAOAL,SAAS,CAAE,UAAM,CAEbK,MAAM,CAACK,EAAP,CAAU,YAAV,CAAwB,UAAM,CAC1BF,SAAS,CAAE,KAAF,CAAT,CACH,CAFD,EAIH,CANQ,CAMN,CAAEH,MAAF,CANM,CAAT,CAQA,MAAO,CACHA,MAAM,CAANA,MADG,CAEHE,MAAM,CAANA,MAFG,CAAP,CAIH,CA5BM","sourcesContent":["import { useMemo, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nexport const useSocket = ( serverPath ) => {\n\n    const socket = useMemo( () => io.connect( serverPath ), [ serverPath ] );\n    const [ online, setOnline ] = useState(false);\n\n    useEffect(() => {\n        setOnline( socket.connected );\n    }, [ socket ])\n\n    useEffect( () => {\n        socket.on('connect', () => {\n            setOnline( true );\n        })\n\n    }, [ socket ])\n\n    useEffect( () => {\n\n        socket.on('disconnect', () => {\n            setOnline( false );\n        })\n\n    }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}"]},"metadata":{},"sourceType":"module"}