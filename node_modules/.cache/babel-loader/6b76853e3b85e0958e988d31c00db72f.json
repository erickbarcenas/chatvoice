{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuga\\\\Documents\\\\GitU\\\\IIMAS\\\\iimas_auth_frontend\\\\src\\\\pages\\\\register\\\\Register.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport { loadModels, getFullFaceDescription, createMatcher, isFaceDetectionModelLoaded } from '../../components/api/face';\nimport DrawBox from '../../components/api/DrawBox';\nimport ShowDescriptors from '../../components/api/showDescriptors';\nimport { JSON_PROFILE } from '../../components/api/profile';\nimport testImg from '../../components/api/img/test.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaxWidth = 600;\nconst boxColor = '#BE80B5';\nconst INIT_STATE = {\n  url: null,\n  imageURL: null,\n  fullDesc: null,\n  imageDimension: null,\n  error: null,\n  loading: false\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mounting = async () => {\n      /*await loadModels();\r\n      await this.matcher();\r\n      await this.getImageDimension(testImg);\r\n      await this.setState({ imageURL: testImg, loading: true });\r\n      await this.handleImageChange(testImg);*/\n    };\n\n    this.matcher = async () => {\n      const faceMatcher = await createMatcher(JSON_PROFILE);\n      this.setState({\n        faceMatcher\n      });\n    };\n\n    this.handleFileChange = async event => {\n      this.resetState();\n      await this.setState({\n        imageURL: URL.createObjectURL(event.target.files[0]),\n        loading: true\n      });\n      this.handleImageChange();\n    };\n\n    this.handleURLChange = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.handleButtonClick = async () => {\n      this.resetState();\n      let blob = await fetch(this.state.url).then(r => r.blob()).catch(error => this.setState({\n        error\n      }));\n\n      if (!!blob && blob.type.includes('image')) {\n        this.setState({\n          imageURL: URL.createObjectURL(blob),\n          loading: true\n        });\n        this.handleImageChange();\n      }\n    };\n\n    this.handleImageChange = async (image = this.state.imageURL) => {\n      await this.getImageDimension(image);\n      await getFullFaceDescription(image).then(fullDesc => {\n        this.setState({\n          fullDesc,\n          loading: false\n        });\n      });\n    };\n\n    this.getImageDimension = imageURL => {\n      let img = new Image();\n\n      img.onload = () => {\n        let HEIGHT = this.state.WIDTH * img.height / img.width;\n        this.setState({\n          HEIGHT,\n          imageDimension: {\n            width: img.width,\n            height: img.height\n          }\n        });\n      };\n\n      img.src = imageURL;\n    };\n\n    this.handleDescriptorsCheck = event => {\n      this.setState({\n        showDescriptors: event.target.checked\n      });\n    };\n\n    this.resetState = () => {\n      this.setState({ ...INIT_STATE\n      });\n    };\n\n    this.state = { ...INIT_STATE,\n      faceMatcher: null,\n      showDescriptors: false,\n      WIDTH: null,\n      HEIGHT: 0,\n      isModelLoaded: !!isFaceDetectionModelLoaded()\n    };\n  }\n\n  componentWillMount() {\n    this.resetState();\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    this.setState({\n      WIDTH: _W\n    });\n    this.mounting();\n  }\n\n  render() {\n    const {\n      WIDTH,\n      HEIGHT,\n      imageURL,\n      fullDesc,\n      faceMatcher,\n      showDescriptors,\n      isModelLoaded,\n      error,\n      loading\n    } = this.state;\n    console.log(showDescriptors); // Display working status\n\n    let status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: Model Loaded = \", isModelLoaded.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 26\n    }, this);\n\n    if (!!error && error.toString() === 'TypeError: Failed to fetch') {\n      status = /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Status: Error Failed to fetch Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this);\n    } else if (loading) {\n      status = /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'blue'\n        },\n        children: \"Status: LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 26\n      }, this);\n    } else if (!!fullDesc && !!imageURL && !loading) {\n      if (fullDesc.length < 2) status = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", fullDesc.length, \" Face Detect\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 30\n      }, this);\n      if (fullDesc.length > 1) status = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", fullDesc.length, \" Faces Detect\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 30\n      }, this);\n    } // Loading Spinner\n\n\n    let spinner = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 0,\n        color: '#BE80B5',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        textShadow: '2px 2px 3px #fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [status, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          width: WIDTH,\n          height: HEIGHT\n        },\n        children: [!!imageURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: WIDTH\n              },\n              src: imageURL,\n              alt: \"imageURL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this), !!fullDesc ? /*#__PURE__*/_jsxDEV(DrawBox, {\n            fullDesc: fullDesc,\n            faceMatcher: faceMatcher,\n            imageWidth: WIDTH,\n            boxColor: boxColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }, this) : null, loading ? spinner : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: WIDTH,\n          padding: 10,\n          border: 'solid',\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"VERIFICA TU IDENTIDAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"myFileUpload\",\n          type: \"file\",\n          onChange: this.handleFileChange,\n          accept: \".jpg, .jpeg, .png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"descriptors\",\n            type: \"checkbox\",\n            checked: this.state.showDescriptors,\n            onChange: this.handleDescriptorsCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Show Descriptors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), !!showDescriptors ? /*#__PURE__*/_jsxDEV(ShowDescriptors, {\n          fullDesc: fullDesc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 46\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default withNamespaces()(Register);","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/pages/register/Register.js"],"names":["React","Component","Fragment","withNamespaces","loadModels","getFullFaceDescription","createMatcher","isFaceDetectionModelLoaded","DrawBox","ShowDescriptors","JSON_PROFILE","testImg","MaxWidth","boxColor","INIT_STATE","url","imageURL","fullDesc","imageDimension","error","loading","Register","constructor","props","mounting","matcher","faceMatcher","setState","handleFileChange","event","resetState","URL","createObjectURL","target","files","handleImageChange","handleURLChange","value","handleButtonClick","blob","fetch","state","then","r","catch","type","includes","image","getImageDimension","img","Image","onload","HEIGHT","WIDTH","height","width","src","handleDescriptorsCheck","showDescriptors","checked","isModelLoaded","componentWillMount","_W","document","documentElement","clientWidth","render","console","log","status","toString","color","length","spinner","margin","position","top","left","transform","textShadow","display","flexDirection","alignItems","padding","border","marginTop"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport {\r\n    loadModels,\r\n    getFullFaceDescription,\r\n    createMatcher,\r\n    isFaceDetectionModelLoaded\r\n} from '../../components/api/face';\r\nimport DrawBox from '../../components/api/DrawBox';\r\nimport ShowDescriptors from '../../components/api/showDescriptors';\r\nimport { JSON_PROFILE } from '../../components/api/profile';\r\nimport testImg from '../../components/api/img/test.png';\r\n\r\nconst MaxWidth = 600;\r\nconst boxColor = '#BE80B5';\r\n\r\nconst INIT_STATE = {\r\n    url: null,\r\n    imageURL: null,\r\n    fullDesc: null,\r\n    imageDimension: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nclass Register extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                ...INIT_STATE,\r\n                faceMatcher: null,\r\n                showDescriptors: false,\r\n                WIDTH: null,\r\n                HEIGHT: 0,\r\n                isModelLoaded: !!isFaceDetectionModelLoaded()\r\n            };\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.resetState();\r\n            let _W = document.documentElement.clientWidth;\r\n            if (_W > MaxWidth) _W = MaxWidth;\r\n            this.setState({ WIDTH: _W });\r\n            this.mounting();\r\n        }\r\n\r\n        mounting = async () => {\r\n            /*await loadModels();\r\n            await this.matcher();\r\n            await this.getImageDimension(testImg);\r\n            await this.setState({ imageURL: testImg, loading: true });\r\n            await this.handleImageChange(testImg);*/\r\n        };\r\n\r\n        matcher = async () => {\r\n            const faceMatcher = await createMatcher(JSON_PROFILE);\r\n            this.setState({ faceMatcher });\r\n        };\r\n\r\n        handleFileChange = async event => {\r\n            this.resetState();\r\n            await this.setState({\r\n                imageURL: URL.createObjectURL(event.target.files[0]),\r\n                loading: true\r\n            });\r\n             this.handleImageChange();\r\n        };\r\n\r\n        handleURLChange = event => {\r\n            this.setState({ url: event.target.value });\r\n        };\r\n\r\n        handleButtonClick = async () => {\r\n            this.resetState();\r\n            let blob = await fetch(this.state.url)\r\n                .then(r => r.blob())\r\n                .catch(error => this.setState({ error }));\r\n            if (!!blob && blob.type.includes('image')) {\r\n                this.setState({\r\n                    imageURL: URL.createObjectURL(blob),\r\n                    loading: true\r\n                });\r\n                this.handleImageChange();\r\n            }\r\n        };\r\n\r\n        handleImageChange = async (image = this.state.imageURL) => {\r\n            await this.getImageDimension(image);\r\n            await getFullFaceDescription(image).then(fullDesc => {\r\n                this.setState({ fullDesc, loading: false });\r\n            });\r\n        };\r\n\r\n        getImageDimension = imageURL => {\r\n            let img = new Image();\r\n            img.onload = () => {\r\n                let HEIGHT = (this.state.WIDTH * img.height) / img.width;\r\n                this.setState({\r\n                    HEIGHT,\r\n                    imageDimension: {\r\n                        width: img.width,\r\n                        height: img.height\r\n                    }\r\n                });\r\n            };\r\n            img.src = imageURL;\r\n        };\r\n\r\n        handleDescriptorsCheck = event => {\r\n            this.setState({ showDescriptors: event.target.checked });\r\n        };\r\n\r\n        resetState = () => {\r\n            this.setState({ ...INIT_STATE });\r\n        };\r\n        render() {\r\n            const {\r\n                WIDTH,\r\n                HEIGHT,\r\n                imageURL,\r\n                fullDesc,\r\n                faceMatcher,\r\n                showDescriptors,\r\n                isModelLoaded,\r\n                error,\r\n                loading\r\n            } = this.state;\r\n            console.log(showDescriptors)\r\n\r\n            // Display working status\r\n            let status = <p>Status: Model Loaded = {isModelLoaded.toString()}</p>;\r\n            if (!!error && error.toString() === 'TypeError: Failed to fetch') {\r\n                status = (\r\n                    <p style={{ color: 'red' }}>Status: Error Failed to fetch Image URL</p>\r\n                );\r\n            } else if (loading) {\r\n                status = <p style={{ color: 'blue' }}>Status: LOADING...</p>;\r\n            } else if (!!fullDesc && !!imageURL && !loading) {\r\n                if (fullDesc.length < 2)\r\n                    status = <p>Status: {fullDesc.length} Face Detect</p>;\r\n                if (fullDesc.length > 1)\r\n                    status = <p>Status: {fullDesc.length} Faces Detect</p>;\r\n            }\r\n\r\n            // Loading Spinner\r\n            let spinner = (\r\n                <div\r\n                    style={{\r\n                        margin: 0,\r\n                        color: '#BE80B5',\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%,-50%)',\r\n                        textShadow: '2px 2px 3px #fff'\r\n                    }}\r\n                >\r\n                    <div className=\"loading\" />\r\n                    <h3>Processing...</h3>\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    {status}\r\n                    <div\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: WIDTH,\r\n                            height: HEIGHT\r\n                        }}\r\n                    >\r\n                        {!!imageURL ? (\r\n                            <div\r\n                                style={{\r\n                                    position: 'relative'\r\n                                }}\r\n                            >\r\n                                <div style={{ position: 'absolute' }}>\r\n                                    <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\r\n                                </div>\r\n                                {!!fullDesc ? (\r\n                                    <DrawBox\r\n                                        fullDesc={fullDesc}\r\n                                        faceMatcher={faceMatcher}\r\n                                        imageWidth={WIDTH}\r\n                                        boxColor={boxColor}\r\n                                    />\r\n                                ) : null}\r\n                            </div>\r\n                        ) : null}\r\n                        {loading ? spinner : null}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: WIDTH,\r\n                            padding: 10,\r\n                            border: 'solid',\r\n                            marginTop: 10\r\n                        }}\r\n                    >\r\n                        <p>VERIFICA TU IDENTIDAD</p>\r\n                        <input\r\n                            id=\"myFileUpload\"\r\n                            type=\"file\"\r\n                            onChange={this.handleFileChange}\r\n                            accept=\".jpg, .jpeg, .png\"\r\n                        />\r\n                        <br />\r\n                        {/*  <div className=\"URLInput\">\r\n            <input\r\n              type=\"url\"\r\n              name=\"url\"\r\n              id=\"url\"\r\n              placeholder=\"Place your photo URL here (only .jpg, .jpeg, .png)\"\r\n              pattern=\"https://.*\"\r\n              size=\"30\"\r\n              onChange={this.handleURLChange}\r\n            />\r\n            <button onClick={this.handleButtonClick}>Upload</button>\r\n          </div>*/}\r\n                        <div>\r\n                            <input\r\n                                name=\"descriptors\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.showDescriptors}\r\n                                onChange={this.handleDescriptorsCheck}\r\n                            />\r\n                            <label>Show Descriptors</label>\r\n                        </div>\r\n                        {!!showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\nexport default withNamespaces()(Register);\r\n"]},"metadata":{},"sourceType":"module"}