{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nexport const useSocket = serverPath => {\n  _s();\n\n  const socket = useMemo(() => io.connect(serverPath), [serverPath]);\n  const [online, setOnline] = useState(false);\n  useEffect(() => {\n    setOnline(socket.connected);\n  }, [socket]);\n  useEffect(() => {\n    socket.on('connect', () => {\n      setOnline(true);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on('disconnect', () => {\n      setOnline(false);\n    });\n  }, [socket]);\n  return {\n    socket,\n    online\n  };\n};\n\n_s(useSocket, \"mSMPn8aK6n1VS9t9soM4waNnXEs=\");","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/hooks/useSocket.js"],"names":["useMemo","useEffect","useState","io","useSocket","serverPath","socket","connect","online","setOnline","connected","on"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,SAAlB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,MAAMC,SAAS,GAAKC,UAAF,IAAkB;AAAA;;AAEvC,QAAMC,MAAM,GAAGN,OAAO,CAAE,MAAMG,EAAE,CAACI,OAAH,CAAYF,UAAZ,CAAR,EAAkC,CAAEA,UAAF,CAAlC,CAAtB;AACA,QAAM,CAAEG,MAAF,EAAUC,SAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS,CAAEH,MAAM,CAACI,SAAT,CAAT;AACH,GAFQ,EAEN,CAAEJ,MAAF,CAFM,CAAT;AAIAL,EAAAA,SAAS,CAAE,MAAM;AACbK,IAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqB,MAAM;AACvBF,MAAAA,SAAS,CAAE,IAAF,CAAT;AACH,KAFD;AAIH,GALQ,EAKN,CAAEH,MAAF,CALM,CAAT;AAOAL,EAAAA,SAAS,CAAE,MAAM;AAEbK,IAAAA,MAAM,CAACK,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC1BF,MAAAA,SAAS,CAAE,KAAF,CAAT;AACH,KAFD;AAIH,GANQ,EAMN,CAAEH,MAAF,CANM,CAAT;AAQA,SAAO;AACHA,IAAAA,MADG;AAEHE,IAAAA;AAFG,GAAP;AAIH,CA5BM;;GAAMJ,S","sourcesContent":["import { useMemo, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nexport const useSocket = ( serverPath ) => {\n\n    const socket = useMemo( () => io.connect( serverPath ), [ serverPath ] );\n    const [ online, setOnline ] = useState(false);\n\n    useEffect(() => {\n        setOnline( socket.connected );\n    }, [ socket ])\n\n    useEffect( () => {\n        socket.on('connect', () => {\n            setOnline( true );\n        })\n\n    }, [ socket ])\n\n    useEffect( () => {\n\n        socket.on('disconnect', () => {\n            setOnline( false );\n        })\n\n    }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}"]},"metadata":{},"sourceType":"module"}