{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuga\\\\Documents\\\\GitU\\\\IIMAS\\\\iimas_auth_frontend\\\\src\\\\pages\\\\register\\\\Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport { loadModels, getFullFaceDescription, createMatcher, isFaceDetectionModelLoaded } from '../../components/api/face';\nimport ShowDescriptors from '../../components/api/showDescriptors';\nimport * as JSON_PROFILE from '../../components/api/descriptor.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaxWidth = 600;\nconst boxColor = '#BE80B5';\nconst INIT_STATE = {\n  url: '',\n  imageURL: '',\n  fullDesc: [],\n  imageDimension: {\n    width: 300,\n    height: 100\n  },\n  error: false,\n  loading: false\n};\n\nconst Register = ({\n  t\n}) => {\n  _s();\n\n  const [avatarBase64, setAvatarBase64] = useState('');\n  const [imgUrl, setImgUrl] = useState('https://bit.ly/2DeofIm');\n  const [state, setState] = useState({ ...INIT_STATE,\n    faceMatcher: null,\n    showDescriptors: false,\n    WIDTH: 300,\n    HEIGHT: 100,\n    isModelLoaded: !!isFaceDetectionModelLoaded()\n  });\n\n  const resetState = () => {\n    setState({ ...state,\n      ...INIT_STATE\n    });\n  };\n\n  const matcher = async () => {\n    const faceMatcher = await createMatcher(JSON_PROFILE); // console.log('=>>>>>>>>>>>>>>', typeof(faceMatcher))\n    //setState({ ...state, faceMatcher });\n  };\n\n  const mounting = async () => {\n    await loadModels();\n    await matcher(); // await getImageDimension(testImg);\n    // await setState({...state,  imageURL: testImg, loading: true });\n    // await handleImageChange(testImg);\n  };\n\n  useEffect(() => {\n    // componentWillMount\n    resetState();\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    setState({ ...state,\n      WIDTH: _W\n    });\n    mounting().then(null);\n  }, []);\n  const {\n    url,\n    WIDTH,\n    HEIGHT,\n    imageURL,\n    fullDesc,\n    faceMatcher,\n    showDescriptors,\n    isModelLoaded,\n    error,\n    loading\n  } = state;\n\n  const handleImageChange = async (image = imageURL) => {\n    await getImageDimension(image);\n    await getFullFaceDescription(image).then(fullDesc => {\n      // @ts-ignore\n      setState({ ...state,\n        loading: false,\n        fullDesc\n      });\n    });\n  };\n\n  const getImageDimension = imageURL => {\n    let img = new Image();\n\n    img.onload = () => {\n      let HEIGHT = WIDTH * img.height / img.width;\n      setState({ ...state,\n        HEIGHT,\n        imageDimension: {\n          width: img.width,\n          height: img.height\n        }\n      });\n    };\n\n    img.src = imageURL;\n  };\n\n  const handleDescriptorsCheck = e => {\n    setState({ ...state,\n      showDescriptors: e.target.value\n    });\n  };\n\n  const encodeFileBase64 = file => {\n    let reader = new FileReader();\n\n    if (file) {\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        let Base64 = reader.result;\n        console.log('This is Base64  --->', `${Base64}`);\n        setAvatarBase64(Base64);\n      };\n\n      reader.onerror = error => {\n        console.log(\"error: \", error);\n      };\n    }\n  };\n\n  const createPreviewImage = file => {\n    const blob = new Blob([file], {\n      type: 'image/*'\n    });\n    return URL.createObjectURL(blob);\n  };\n\n  const handleFileChange = async event => {\n    resetState();\n    const inputValue = event.currentTarget.files[0];\n    const blob = new Blob([inputValue], {\n      type: 'image/'\n    }); // console.log(createPreviewImage(inputValue));\n    //encodeFileBase64(inputValue)\n    // await\n\n    setImgUrl(`${URL.createObjectURL(blob)}`);\n    setState({ ...state,\n      loading: true\n    });\n    await handleImageChange();\n  };\n\n  const handleURLChange = event => {\n    setState({ ...state,\n      url: event.target.value\n    });\n  }; // Display working status\n\n\n  let status = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Status: Model Loaded = \", isModelLoaded.toString()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 26\n  }, this);\n\n  if (error && error.toString() === 'TypeError: Failed to fetch') {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Status: Error Failed to fetch Image URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }, this);\n  } else if (loading) {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'blue'\n      },\n      children: \"Status: LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 26\n    }, this);\n  } else if (!!fullDesc && !!imageURL && !loading) {\n    if (fullDesc.length < 2) status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", fullDesc.length, \" Face Detect\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 30\n    }, this);\n    if (fullDesc.length > 1) status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", fullDesc.length, \" Faces Detect\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 30\n    }, this);\n  } // Loading Spinner\n\n\n  const spinner = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 0,\n      color: '#BE80B5',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%,-50%)',\n      textShadow: '2px 2px 3px #fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 17\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [status, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: WIDTH,\n        height: HEIGHT\n      },\n      children: loading ? spinner : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: WIDTH,\n        padding: 10,\n        border: 'solid',\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"VERIFICA TU IDENTIDAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"myFileUpload\",\n        type: \"file\",\n        onChange: e => handleFileChange(e),\n        accept: \".jpg, .jpeg, .png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"descriptors\",\n          type: \"checkbox\",\n          checked: showDescriptors,\n          onChange: e => handleDescriptorsCheck(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Show Descriptors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }, this), showDescriptors ? /*#__PURE__*/_jsxDEV(ShowDescriptors, {\n        fullDesc: fullDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 44\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 17\n  }, this);\n};\n\n_s(Register, \"QKDad7cHsSnxzfL1mG7fryMSy78=\");\n\n_c = Register;\nexport default withNamespaces()(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/pages/register/Register.tsx"],"names":["React","useEffect","useState","withNamespaces","loadModels","getFullFaceDescription","createMatcher","isFaceDetectionModelLoaded","ShowDescriptors","JSON_PROFILE","MaxWidth","boxColor","INIT_STATE","url","imageURL","fullDesc","imageDimension","width","height","error","loading","Register","t","avatarBase64","setAvatarBase64","imgUrl","setImgUrl","state","setState","faceMatcher","showDescriptors","WIDTH","HEIGHT","isModelLoaded","resetState","matcher","mounting","_W","document","documentElement","clientWidth","then","handleImageChange","image","getImageDimension","img","Image","onload","src","handleDescriptorsCheck","e","target","value","encodeFileBase64","file","reader","FileReader","readAsDataURL","Base64","result","console","log","onerror","createPreviewImage","blob","Blob","type","URL","createObjectURL","handleFileChange","event","inputValue","currentTarget","files","handleURLChange","status","toString","color","length","spinner","margin","position","top","left","transform","textShadow","display","flexDirection","alignItems","padding","border","marginTop"],"mappings":"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","sourcesContent":["import React, {Component, Fragment, useEffect, useState} from 'react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport {\r\n    loadModels,\r\n    getFullFaceDescription,\r\n    createMatcher,\r\n    isFaceDetectionModelLoaded\r\n} from '../../components/api/face';\r\nimport DrawBox from '../../components/api/DrawBox';\r\nimport ShowDescriptors from '../../components/api/showDescriptors';\r\nimport * as JSON_PROFILE from '../../components/api/descriptor.json';\r\nimport testImg from '../../components/api/img/test.png';\r\n\r\n\r\n\r\n\r\nconst MaxWidth = 600;\r\nconst boxColor = '#BE80B5';\r\n\r\nconst INIT_STATE = {\r\n    url: '',\r\n    imageURL: '',\r\n    fullDesc: [],\r\n    imageDimension: {\r\n        width: 300,\r\n        height: 100\r\n    },\r\n    error: false,\r\n    loading: false\r\n};\r\n\r\nconst Register = ({t}: any)=>{\r\n    const [avatarBase64, setAvatarBase64] = useState('');\r\n    const [imgUrl, setImgUrl] = useState('https://bit.ly/2DeofIm');\r\n    const [state, setState] = useState({\r\n        ...INIT_STATE,\r\n        faceMatcher: null,\r\n        showDescriptors: false,\r\n        WIDTH: 300,\r\n        HEIGHT: 100,\r\n        isModelLoaded: !!isFaceDetectionModelLoaded()\r\n    });\r\n\r\n\r\n    const resetState = () => {\r\n        setState({ ...state, ...INIT_STATE });\r\n    };\r\n\r\n    const matcher = async () => {\r\n        const faceMatcher = await createMatcher(JSON_PROFILE);\r\n        // console.log('=>>>>>>>>>>>>>>', typeof(faceMatcher))\r\n        //setState({ ...state, faceMatcher });\r\n    };\r\n\r\n    const mounting = async () => {\r\n        await loadModels();\r\n        await matcher();\r\n        // await getImageDimension(testImg);\r\n        // await setState({...state,  imageURL: testImg, loading: true });\r\n        // await handleImageChange(testImg);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        // componentWillMount\r\n        resetState();\r\n        let _W = document.documentElement.clientWidth;\r\n        if (_W > MaxWidth) _W = MaxWidth;\r\n        setState({ ...state, WIDTH: _W });\r\n        mounting().then(null);\r\n\r\n    }, [])\r\n\r\n    const  {\r\n        url,\r\n        WIDTH,\r\n        HEIGHT,\r\n        imageURL,\r\n        fullDesc,\r\n        faceMatcher,\r\n        showDescriptors,\r\n        isModelLoaded,\r\n        error,\r\n        loading\r\n    } = state;\r\n\r\n\r\n\r\n\r\n    const handleImageChange = async (image = imageURL) => {\r\n        await getImageDimension(image);\r\n        await getFullFaceDescription(image).then(fullDesc => {\r\n            // @ts-ignore\r\n            setState({ ...state, loading: false, fullDesc });\r\n        });\r\n    };\r\n\r\n    const getImageDimension = (imageURL: any) => {\r\n        let img = new Image();\r\n        img.onload = () => {\r\n            let HEIGHT = (WIDTH * img.height) / img.width;\r\n            setState({...state,\r\n                HEIGHT,\r\n                imageDimension: {\r\n                    width: img.width,\r\n                    height: img.height\r\n                }\r\n            });\r\n        };\r\n        img.src = imageURL;\r\n    };\r\n\r\n    const handleDescriptorsCheck = (e: any) => {\r\n        setState({ ...state, showDescriptors: e.target.value });\r\n    };\r\n\r\n\r\n    const encodeFileBase64 = (file: any) => {\r\n        let reader = new FileReader();\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                let Base64 = reader.result as string;\r\n                console.log('This is Base64  --->', `${Base64}`);\r\n                setAvatarBase64(Base64);\r\n            };\r\n            reader.onerror = (error) => {\r\n                console.log(\"error: \", error);\r\n            };\r\n        }\r\n    };\r\n        const createPreviewImage = (file:any) => {\r\n\r\n            const blob = new Blob([file], {type: 'image/*'});\r\n            return URL.createObjectURL(blob)\r\n        }\r\n\r\n\r\n        const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n            resetState();\r\n\r\n            const inputValue = event.currentTarget.files[0];\r\n            const blob = new Blob([inputValue], {type: 'image/'});\r\n            // console.log(createPreviewImage(inputValue));\r\n\r\n            //encodeFileBase64(inputValue)\r\n            // await\r\n            setImgUrl(`${URL.createObjectURL(blob)}`);\r\n\r\n            setState({...state,\r\n                loading: true\r\n            });\r\n            await handleImageChange()\r\n        };\r\n\r\n        const handleURLChange = (event: any) => {\r\n            setState({ ...state, url: event.target.value });\r\n        };\r\n\r\n\r\n\r\n\r\n\r\n\r\n            // Display working status\r\n            let status = <p>Status: Model Loaded = {isModelLoaded.toString()}</p>;\r\n            if (error && error.toString() === 'TypeError: Failed to fetch') {\r\n                status = (\r\n                    <p style={{ color: 'red' }}>Status: Error Failed to fetch Image URL</p>\r\n                );\r\n            } else if (loading) {\r\n                status = <p style={{ color: 'blue' }}>Status: LOADING...</p>;\r\n            } else if (!!fullDesc && !!imageURL && !loading) {\r\n                if (fullDesc.length < 2)\r\n                    status = <p>Status: {fullDesc.length} Face Detect</p>;\r\n                if (fullDesc.length > 1)\r\n                    status = <p>Status: {fullDesc.length} Faces Detect</p>;\r\n            }\r\n\r\n            // Loading Spinner\r\n            const spinner = (\r\n                <div\r\n                    style={{\r\n                        margin: 0,\r\n                        color: '#BE80B5',\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%,-50%)',\r\n                        textShadow: '2px 2px 3px #fff'\r\n                    }}\r\n                >\r\n                    <div className=\"loading\" />\r\n                    <h3>Processing...</h3>\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    {status}\r\n                    <div\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: WIDTH,\r\n                            height: HEIGHT\r\n                        }}\r\n                    >\r\n                        {/*{!!imageURL ? (\r\n                            <div\r\n                                style={{\r\n                                    position: 'relative'\r\n                                }}\r\n                            >\r\n                                <div style={{ position: 'absolute' }}>\r\n                                    <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\r\n                                </div>\r\n                                {!!fullDesc ? (\r\n                                    <DrawBox\r\n                                        fullDesc={fullDesc}\r\n                                        faceMatcher={faceMatcher}\r\n                                        imageWidth={WIDTH}\r\n                                        boxColor={boxColor}\r\n                                    />\r\n                                ) : null}\r\n                            </div>\r\n                        ) : null}*/}\r\n                        {loading ? spinner : null}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: WIDTH,\r\n                            padding: 10,\r\n                            border: 'solid',\r\n                            marginTop: 10\r\n                        }}\r\n                    >\r\n                        <p>VERIFICA TU IDENTIDAD</p>\r\n                        <input\r\n                            id=\"myFileUpload\"\r\n                            type=\"file\"\r\n                            onChange={(e)=>handleFileChange(e)}\r\n                            accept=\".jpg, .jpeg, .png\"\r\n                        />\r\n\r\n\r\n                        <div>\r\n                            <input\r\n                                name=\"descriptors\"\r\n                                type=\"checkbox\"\r\n                                checked={showDescriptors}\r\n                                onChange={(e)=>handleDescriptorsCheck(e)}\r\n                            />\r\n                            <label>Show Descriptors</label>\r\n                        </div>\r\n                        {showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n    }\r\n\r\n\r\nexport default withNamespaces()(Register);\r\n"]},"metadata":{},"sourceType":"module"}