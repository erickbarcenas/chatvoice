{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuga\\\\Documents\\\\GitU\\\\IIMAS\\\\iimas_auth_frontend\\\\src\\\\components\\\\api\\\\showDescriptors.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowDescriptors extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.update = (props = this.props) => {\n      let {\n        fullDesc\n      } = props;\n\n      if (!!fullDesc) {\n        this.setState({\n          descriptors: fullDesc.map(fd => fd.descriptor)\n        });\n      }\n    };\n\n    this.state = {\n      descriptors: null\n    };\n  }\n\n  componentWillMount() {\n    this.update();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.update(newProps);\n  }\n\n  render() {\n    const {\n      descriptors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Detail Descriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), !!descriptors ? descriptors.map((descriptor, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          padding: 10,\n          margin: 20,\n          wordBreak: 'break-all',\n          borderStyle: 'solid',\n          borderColor: 'blue'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Descriptor_\", i, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), descriptor.toString()]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ShowDescriptors;","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/components/api/showDescriptors.js"],"names":["React","Component","ShowDescriptors","constructor","props","update","fullDesc","setState","descriptors","map","fd","descriptor","state","componentWillMount","componentWillReceiveProps","newProps","render","display","flexDirection","alignContent","alignItems","i","padding","margin","wordBreak","borderStyle","borderColor","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACtCE,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN;;AADiB,SAenBC,MAfmB,GAeV,CAACD,KAAK,GAAG,KAAKA,KAAd,KAAwB;AAC/B,UAAI;AAAEE,QAAAA;AAAF,UAAeF,KAAnB;;AACA,UAAI,CAAC,CAACE,QAAN,EAAgB;AACd,aAAKC,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAEF,QAAQ,CAACG,GAAT,CAAaC,EAAE,IAAIA,EAAE,CAACC,UAAtB;AADD,SAAd;AAGD;AACF,KAtBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXJ,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEDK,EAAAA,kBAAkB,GAAG;AACnB,SAAKR,MAAL;AACD;;AAEDS,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAClC,SAAKV,MAAL,CAAYU,QAAZ;AACD;;AAWDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAkB,KAAKI,KAA7B;AAEA,wBACE;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,QAFV;AAGLC,QAAAA,YAAY,EAAE,QAHT;AAILC,QAAAA,UAAU,EAAE;AAJP,OADT;AAAA,8BAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EASG,CAAC,CAACZ,WAAF,GACGA,WAAW,CAACC,GAAZ,CAAgB,CAACE,UAAD,EAAaU,CAAb,kBACd;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,EADJ;AAELC,UAAAA,MAAM,EAAE,EAFH;AAGLC,UAAAA,SAAS,EAAE,WAHN;AAILC,UAAAA,WAAW,EAAE,OAJR;AAKLC,UAAAA,WAAW,EAAE;AALR,SAFT;AAAA,gCAUE;AAAA,oCAAoBL,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,EAWGV,UAAU,CAACgB,QAAX,EAXH;AAAA,SACON,CADP;AAAA;AAAA;AAAA;AAAA,cADF,CADH,GAgBG,IAzBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAzDqC;;AA4DxC,eAAenB,eAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ShowDescriptors extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      descriptors: null\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.update();\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.update(newProps);\r\n  }\r\n\r\n  update = (props = this.props) => {\r\n    let { fullDesc } = props;\r\n    if (!!fullDesc) {\r\n      this.setState({\r\n        descriptors: fullDesc.map(fd => fd.descriptor)\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { descriptors } = this.state;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <h3>Detail Descriptions</h3>\r\n        {!!descriptors\r\n          ? descriptors.map((descriptor, i) => (\r\n              <p\r\n                key={i}\r\n                style={{\r\n                  padding: 10,\r\n                  margin: 20,\r\n                  wordBreak: 'break-all',\r\n                  borderStyle: 'solid',\r\n                  borderColor: 'blue'\r\n                }}\r\n              >\r\n                <strong>Descriptor_{i}: </strong>\r\n                {descriptor.toString()}\r\n              </p>\r\n            ))\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowDescriptors;\r\n"]},"metadata":{},"sourceType":"module"}