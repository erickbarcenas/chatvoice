{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuga\\\\Documents\\\\GitU\\\\IIMAS\\\\iimas_auth_frontend\\\\src\\\\components\\\\api\\\\DrawBox.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DrawBox extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getDescription = async (props = this.props) => {\n      const {\n        fullDesc,\n        faceMatcher\n      } = props;\n\n      if (!!fullDesc) {\n        await this.setState({\n          descriptors: fullDesc.map(fd => fd.descriptor),\n          detections: fullDesc.map(fd => fd.detection)\n        });\n\n        if (!!this.state.descriptors && !!faceMatcher) {\n          let match = await this.state.descriptors.map(descriptor => faceMatcher.findBestMatch(descriptor));\n          this.setState({\n            match\n          });\n        }\n      }\n    };\n\n    this.state = {\n      descriptors: null,\n      detections: null,\n      match: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDescription();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.getDescription(newProps);\n  }\n\n  render() {\n    const {\n      imageWidth,\n      boxColor\n    } = this.props;\n    const {\n      detections,\n      match\n    } = this.state;\n    let box = null;\n\n    if (!!detections) {\n      box = detections.map((detection, i) => {\n        const relativeBox = detection.relativeBox;\n        const dimension = detection._imageDims;\n\n        let _X = imageWidth * relativeBox._x;\n\n        let _Y = relativeBox._y * imageWidth * dimension._height / dimension._width;\n\n        let _W = imageWidth * relativeBox.width;\n\n        let _H = relativeBox.height * imageWidth * dimension._height / dimension._width;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              border: 'solid',\n              borderColor: boxColor,\n              height: _H + 10,\n              width: _W + 10,\n              transform: `translate(${_X + 50}px,${_Y + 30}px)`\n            },\n            children: !!match && match[i] && match[i]._label !== 'unknown' ? /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                backgroundColor: boxColor,\n                border: 'solid',\n                borderColor: boxColor,\n                width: _W,\n                marginTop: 0,\n                color: '#fff',\n                transform: `translate(-3px,${_H}px)`\n              },\n              children: match[i]._label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: box\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default DrawBox;","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/components/api/DrawBox.js"],"names":["React","Component","DrawBox","constructor","props","getDescription","fullDesc","faceMatcher","setState","descriptors","map","fd","descriptor","detections","detection","state","match","findBestMatch","componentDidMount","componentWillReceiveProps","newProps","render","imageWidth","boxColor","box","i","relativeBox","dimension","_imageDims","_X","_x","_Y","_y","_height","_width","_W","width","_H","height","position","border","borderColor","transform","_label","backgroundColor","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass DrawBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      descriptors: null,\r\n      detections: null,\r\n      match: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDescription();\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.getDescription(newProps);\r\n  }\r\n\r\n  getDescription = async (props = this.props) => {\r\n    const { fullDesc, faceMatcher } = props;\r\n    if (!!fullDesc) {\r\n      await this.setState({\r\n        descriptors: fullDesc.map(fd => fd.descriptor),\r\n        detections: fullDesc.map(fd => fd.detection)\r\n      });\r\n      if (!!this.state.descriptors && !!faceMatcher) {\r\n        let match = await this.state.descriptors.map(descriptor =>\r\n          faceMatcher.findBestMatch(descriptor)\r\n        );\r\n        this.setState({ match });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { imageWidth, boxColor } = this.props;\r\n    const { detections, match } = this.state;\r\n    let box = null;\r\n\r\n    if (!!detections) {\r\n      box = detections.map((detection, i) => {\r\n        const relativeBox = detection.relativeBox;\r\n        const dimension = detection._imageDims;\r\n        let _X = imageWidth * relativeBox._x;\r\n        let _Y =\r\n          (relativeBox._y * imageWidth * dimension._height) / dimension._width;\r\n        let _W = imageWidth * relativeBox.width;\r\n        let _H =\r\n          (relativeBox.height * imageWidth * dimension._height) /\r\n          dimension._width;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: boxColor,\r\n                height: _H+10,\r\n                width: _W+10,\r\n                transform: `translate(${_X+50}px,${_Y+30}px)`\r\n              }}\r\n            >\r\n              {!!match && match[i] && match[i]._label !== 'unknown' ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: boxColor,\r\n                    border: 'solid',\r\n                    borderColor: boxColor,\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return <div>{box}</div>;\r\n  }\r\n}\r\n\r\nexport default DrawBox;\r\n"]},"metadata":{},"sourceType":"module"}