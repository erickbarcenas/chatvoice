{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuga\\\\Documents\\\\GitU\\\\IIMAS\\\\iimas_auth_frontend\\\\src\\\\pages\\\\register\\\\Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport { loadModels, getFullFaceDescription, createMatcher, isFaceDetectionModelLoaded } from '../../components/api/face';\nimport DrawBox from '../../components/api/DrawBox';\nimport ShowDescriptors from '../../components/api/showDescriptors';\nimport * as JSON_PROFILE from '../../components/api/showDescriptors';\nimport testImg from '../../components/api/img/test.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaxWidth = 600;\nconst boxColor = '#BE80B5';\nconst INIT_STATE = {\n  url: '',\n  imageURL: 'https://bit.ly/2DeofIm',\n  fullDesc: null,\n  imageDimension: {\n    width: 300,\n    height: 0\n  },\n  error: false,\n  loading: false\n};\n\nconst Register = ({\n  t\n}) => {\n  _s();\n\n  const [state, setState] = useState({ ...INIT_STATE,\n    faceMatcher: null,\n    showDescriptors: false,\n    WIDTH: 300,\n    HEIGHT: 0,\n    isModelLoaded: !!isFaceDetectionModelLoaded()\n  });\n\n  const resetState = () => {\n    setState({ ...state,\n      ...INIT_STATE\n    });\n  };\n\n  const mounting = async () => {\n    await loadModels();\n    await matcher();\n    await getImageDimension(testImg);\n    await setState({ ...state,\n      imageURL: testImg,\n      loading: true\n    });\n    await handleImageChange(testImg);\n  };\n\n  useEffect(() => {\n    // componentWillMount\n    resetState();\n    let _W = document.documentElement.clientWidth;\n    if (_W > MaxWidth) _W = MaxWidth;\n    setState({ ...state,\n      WIDTH: _W\n    });\n    mounting();\n  }, []);\n  const {\n    url,\n    WIDTH,\n    HEIGHT,\n    imageURL,\n    fullDesc,\n    faceMatcher,\n    showDescriptors,\n    isModelLoaded,\n    error,\n    loading\n  } = state;\n\n  const matcher = async () => {\n    const faceMatcher = await createMatcher(JSON_PROFILE);\n    setState({ ...state,\n      faceMatcher: faceMatcher\n    });\n  };\n\n  const createPreviewImage = file => URL.createObjectURL(file);\n\n  const encodeFileBase64 = file => {\n    let reader = new FileReader();\n\n    if (file) {\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        let Base64 = reader.result; // console.log('This is Base64  --->', `${Base64}`);\n\n        setAvatarBase64(Base64);\n      };\n\n      reader.onerror = error => {\n        console.log(\"error: \", error);\n      };\n    }\n  };\n\n  const handleFileChange = async event => {\n    resetState();\n    const inputValue = event.target.files[0];\n    encodeFileBase64(inputValue); // await\n\n    setState({ ...state,\n      imageURL: createPreviewImage(inputValue),\n      loading: true\n    });\n    handleImageChange();\n  };\n\n  const handleURLChange = event => {\n    setState({ ...state,\n      url: event.target.value\n    });\n  };\n\n  const handleButtonClick = async () => {\n    resetState();\n    let blob = await fetch(url).then(r => r.blob()).catch(error => setState({ ...state,\n      error\n    }));\n\n    if (!!blob && blob.type.includes('image')) {\n      setState({ ...state,\n        imageURL: URL.createObjectURL(blob),\n        loading: true\n      });\n      handleImageChange();\n    }\n  };\n\n  const handleImageChange = async (image = imageURL) => {\n    await getImageDimension(image);\n    await getFullFaceDescription(image).then(fullDesc => {\n      setState({ ...state,\n        fullDesc,\n        loading: false\n      });\n    });\n  };\n\n  const getImageDimension = imageURL => {\n    let img = new Image();\n\n    img.onload = () => {\n      let HEIGHT = WIDTH * img.height / img.width;\n      setState({ ...state,\n        HEIGHT,\n        imageDimension: {\n          width: img.width,\n          height: img.height\n        }\n      });\n    };\n\n    img.src = imageURL;\n  };\n\n  const handleDescriptorsCheck = event => {\n    setState({ ...state,\n      showDescriptors: event.target.checked\n    });\n  }; // Display working status\n\n\n  let status = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Status: Model Loaded = \", isModelLoaded.toString()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 26\n  }, this);\n\n  if (!!error && error.toString() === 'TypeError: Failed to fetch') {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Status: Error Failed to fetch Image URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }, this);\n  } else if (loading) {\n    status = /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'blue'\n      },\n      children: \"Status: LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 26\n    }, this);\n  } else if (!!fullDesc && !!imageURL && !loading) {\n    if (fullDesc.length < 2) status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", fullDesc.length, \" Face Detect\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 30\n    }, this);\n    if (fullDesc.length > 1) status = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", fullDesc.length, \" Faces Detect\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 30\n    }, this);\n  } // Loading Spinner\n\n\n  const spinner = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 0,\n      color: '#BE80B5',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%,-50%)',\n      textShadow: '2px 2px 3px #fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 17\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [status, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: WIDTH,\n        height: HEIGHT\n      },\n      children: [!!imageURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: WIDTH\n            },\n            src: imageURL,\n            alt: \"imageURL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 33\n        }, this), !!fullDesc ? /*#__PURE__*/_jsxDEV(DrawBox, {\n          fullDesc: fullDesc,\n          faceMatcher: faceMatcher,\n          imageWidth: WIDTH,\n          boxColor: boxColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 37\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }, this) : null, loading ? spinner : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: WIDTH,\n        padding: 10,\n        border: 'solid',\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"VERIFICA TU IDENTIDAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"myFileUpload\",\n        type: \"file\",\n        onChange: e => handleFileChange(e),\n        accept: \".jpg, .jpeg, .png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"descriptors\",\n          type: \"checkbox\",\n          checked: () => showDescriptors(),\n          onChange: () => handleDescriptorsCheck()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Show Descriptors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }, this), !!showDescriptors ? /*#__PURE__*/_jsxDEV(ShowDescriptors, {\n        fullDesc: fullDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 46\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 17\n  }, this);\n};\n\n_s(Register, \"MKEI4Vut2im3o7V0St8FREJxruE=\");\n\n_c = Register;\nexport default withNamespaces()(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/shuga/Documents/GitU/IIMAS/iimas_auth_frontend/src/pages/register/Register.tsx"],"names":["React","useEffect","useState","withNamespaces","loadModels","getFullFaceDescription","createMatcher","isFaceDetectionModelLoaded","DrawBox","ShowDescriptors","JSON_PROFILE","testImg","MaxWidth","boxColor","INIT_STATE","url","imageURL","fullDesc","imageDimension","width","height","error","loading","Register","t","state","setState","faceMatcher","showDescriptors","WIDTH","HEIGHT","isModelLoaded","resetState","mounting","matcher","getImageDimension","handleImageChange","_W","document","documentElement","clientWidth","createPreviewImage","file","URL","createObjectURL","encodeFileBase64","reader","FileReader","readAsDataURL","onload","Base64","result","setAvatarBase64","onerror","console","log","handleFileChange","event","inputValue","target","files","handleURLChange","value","handleButtonClick","blob","fetch","then","r","catch","type","includes","image","img","Image","src","handleDescriptorsCheck","checked","status","toString","color","length","spinner","margin","position","top","left","transform","textShadow","display","flexDirection","alignItems","padding","border","marginTop","e"],"mappings":"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","sourcesContent":["import React, {Component, Fragment, useEffect, useState} from 'react';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport {\r\n    loadModels,\r\n    getFullFaceDescription,\r\n    createMatcher,\r\n    isFaceDetectionModelLoaded\r\n} from '../../components/api/face';\r\nimport DrawBox from '../../components/api/DrawBox';\r\nimport ShowDescriptors from '../../components/api/showDescriptors';\r\nimport * as JSON_PROFILE from '../../components/api/showDescriptors';\r\nimport testImg from '../../components/api/img/test.png';\r\n\r\n\r\nconst MaxWidth = 600;\r\nconst boxColor = '#BE80B5';\r\n\r\nconst INIT_STATE = {\r\n    url: '',\r\n    imageURL: 'https://bit.ly/2DeofIm',\r\n    fullDesc: null,\r\n    imageDimension: {\r\n        width: 300,\r\n        height: 0\r\n    },\r\n    error: false,\r\n    loading: false\r\n};\r\n\r\nconst Register = ({t}: any)=>{\r\n\r\n    const [state, setState] = useState({\r\n        ...INIT_STATE,\r\n        faceMatcher: null,\r\n        showDescriptors: false,\r\n        WIDTH: 300,\r\n        HEIGHT: 0,\r\n        isModelLoaded: !!isFaceDetectionModelLoaded()\r\n    });\r\n\r\n\r\n    const resetState = () => {\r\n        setState({ ...state, ...INIT_STATE });\r\n    };\r\n\r\n    const mounting = async () => {\r\n        await loadModels();\r\n        await matcher();\r\n        await getImageDimension(testImg);\r\n        await setState({...state,  imageURL: testImg, loading: true });\r\n        await handleImageChange(testImg);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        // componentWillMount\r\n        resetState();\r\n        let _W = document.documentElement.clientWidth;\r\n        if (_W > MaxWidth) _W = MaxWidth;\r\n        setState({ ...state, WIDTH: _W });\r\n        mounting();\r\n\r\n    }, [])\r\n\r\n    const  {\r\n        url,\r\n        WIDTH,\r\n        HEIGHT,\r\n        imageURL,\r\n        fullDesc,\r\n        faceMatcher,\r\n        showDescriptors,\r\n        isModelLoaded,\r\n        error,\r\n        loading\r\n    } = state;\r\n\r\n\r\n\r\n        const matcher = async () => {\r\n            const faceMatcher = await createMatcher(JSON_PROFILE);\r\n            setState({ ...state, faceMatcher: faceMatcher });\r\n        };\r\n\r\n        const createPreviewImage = file => URL.createObjectURL(file);\r\n\r\n    const encodeFileBase64 = (file) => {\r\n        let reader = new FileReader();\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                let Base64 = reader.result as string;\r\n                // console.log('This is Base64  --->', `${Base64}`);\r\n                setAvatarBase64(Base64);\r\n            };\r\n            reader.onerror = (error) => {\r\n                console.log(\"error: \", error);\r\n            };\r\n        }\r\n    };\r\n\r\n        const handleFileChange = async event => {\r\n            resetState();\r\n            const inputValue = event.target.files[0];\r\n            encodeFileBase64(inputValue)\r\n            // await\r\n            setState({...state,\r\n                imageURL: createPreviewImage(inputValue),\r\n                loading: true\r\n            });\r\n             handleImageChange();\r\n        };\r\n\r\n        const handleURLChange = event => {\r\n            setState({ ...state, url: event.target.value });\r\n        };\r\n\r\n        const handleButtonClick = async () => {\r\n            resetState();\r\n            let blob = await fetch(url)\r\n                .then(r => r.blob())\r\n                .catch(error => setState({ ...state, error }));\r\n            if (!!blob && blob.type.includes('image')) {\r\n                setState({...state,\r\n                    imageURL: URL.createObjectURL(blob),\r\n                    loading: true\r\n                });\r\n                handleImageChange();\r\n            }\r\n        };\r\n\r\n        const handleImageChange = async (image = imageURL) => {\r\n            await getImageDimension(image);\r\n            await getFullFaceDescription(image).then(fullDesc => {\r\n               setState({ ...state, fullDesc, loading: false });\r\n            });\r\n        };\r\n\r\n        const getImageDimension = imageURL => {\r\n            let img = new Image();\r\n            img.onload = () => {\r\n                let HEIGHT = (WIDTH * img.height) / img.width;\r\n                setState({...state,\r\n                    HEIGHT,\r\n                    imageDimension: {\r\n                        width: img.width,\r\n                        height: img.height\r\n                    }\r\n                });\r\n            };\r\n            img.src = imageURL;\r\n        };\r\n\r\n        const handleDescriptorsCheck = event => {\r\n            setState({ ...state, showDescriptors: event.target.checked });\r\n        };\r\n\r\n\r\n\r\n\r\n\r\n\r\n            // Display working status\r\n            let status = <p>Status: Model Loaded = {isModelLoaded.toString()}</p>;\r\n            if (!!error && error.toString() === 'TypeError: Failed to fetch') {\r\n                status = (\r\n                    <p style={{ color: 'red' }}>Status: Error Failed to fetch Image URL</p>\r\n                );\r\n            } else if (loading) {\r\n                status = <p style={{ color: 'blue' }}>Status: LOADING...</p>;\r\n            } else if (!!fullDesc && !!imageURL && !loading) {\r\n                if (fullDesc.length < 2)\r\n                    status = <p>Status: {fullDesc.length} Face Detect</p>;\r\n                if (fullDesc.length > 1)\r\n                    status = <p>Status: {fullDesc.length} Faces Detect</p>;\r\n            }\r\n\r\n            // Loading Spinner\r\n            const spinner = (\r\n                <div\r\n                    style={{\r\n                        margin: 0,\r\n                        color: '#BE80B5',\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%,-50%)',\r\n                        textShadow: '2px 2px 3px #fff'\r\n                    }}\r\n                >\r\n                    <div className=\"loading\" />\r\n                    <h3>Processing...</h3>\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center'\r\n                    }}\r\n                >\r\n                    {status}\r\n                    <div\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: WIDTH,\r\n                            height: HEIGHT\r\n                        }}\r\n                    >\r\n                        {!!imageURL ? (\r\n                            <div\r\n                                style={{\r\n                                    position: 'relative'\r\n                                }}\r\n                            >\r\n                                <div style={{ position: 'absolute' }}>\r\n                                    <img style={{ width: WIDTH }} src={imageURL} alt=\"imageURL\" />\r\n                                </div>\r\n                                {!!fullDesc ? (\r\n                                    <DrawBox\r\n                                        fullDesc={fullDesc}\r\n                                        faceMatcher={faceMatcher}\r\n                                        imageWidth={WIDTH}\r\n                                        boxColor={boxColor}\r\n                                    />\r\n                                ) : null}\r\n                            </div>\r\n                        ) : null}\r\n                        {loading ? spinner : null}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: WIDTH,\r\n                            padding: 10,\r\n                            border: 'solid',\r\n                            marginTop: 10\r\n                        }}\r\n                    >\r\n                        <p>VERIFICA TU IDENTIDAD</p>\r\n                        <input\r\n                            id=\"myFileUpload\"\r\n                            type=\"file\"\r\n                            onChange={(e)=>handleFileChange(e)}\r\n                            accept=\".jpg, .jpeg, .png\"\r\n                        />\r\n                        <br />\r\n                        {/*  <div className=\"URLInput\">\r\n            <input\r\n              type=\"url\"\r\n              name=\"url\"\r\n              id=\"url\"\r\n              placeholder=\"Place your photo URL here (only .jpg, .jpeg, .png)\"\r\n              pattern=\"https://.*\"\r\n              size=\"30\"\r\n              onChange={this.handleURLChange}\r\n            />\r\n            <button onClick={this.handleButtonClick}>Upload</button>\r\n          </div>*/}\r\n                        <div>\r\n                            <input\r\n                                name=\"descriptors\"\r\n                                type=\"checkbox\"\r\n                                checked={()=>showDescriptors()}\r\n                                onChange={()=>handleDescriptorsCheck()}\r\n                            />\r\n                            <label>Show Descriptors</label>\r\n                        </div>\r\n                        {!!showDescriptors ? <ShowDescriptors fullDesc={fullDesc} /> : null}\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n    }\r\n\r\n\r\nexport default withNamespaces()(Register);\r\n"]},"metadata":{},"sourceType":"module"}